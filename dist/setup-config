Saved package config for scrabble-bot-0.1.0.0 written by Cabal-1.16.0 using ghc-7.6
LocalBuildInfo {configFlags = ConfigFlags {configPrograms = [], configProgramPaths = [], configProgramArgs = [], configHcFlavor = Flag GHC, configHcPath = NoFlag, configHcPkg = NoFlag, configVanillaLib = Flag True, configProfLib = Flag False, configSharedLib = Flag False, configDynExe = Flag False, configProfExe = Flag False, configConfigureArgs = [], configOptimization = Flag NormalOptimisation, configProgPrefix = Flag "", configProgSuffix = Flag "", configInstallDirs = InstallDirs {prefix = Flag "C:\\Users\\Kutta\\AppData\\Roaming\\cabal", bindir = NoFlag, libdir = NoFlag, libsubdir = NoFlag, dynlibdir = NoFlag, libexecdir = NoFlag, progdir = NoFlag, includedir = NoFlag, datadir = NoFlag, datasubdir = NoFlag, docdir = NoFlag, mandir = NoFlag, htmldir = NoFlag, haddockdir = NoFlag}, configScratchDir = NoFlag, configExtraLibDirs = [], configExtraIncludeDirs = [], configDistPref = Flag "dist", configVerbosity = Flag Normal, configUserInstall = Flag True, configPackageDBs = [], configGHCiLib = Flag True, configSplitObjs = Flag False, configStripExes = Flag True, configConstraints = [Dependency (PackageName "split") (ThisVersion (Version {versionBranch = [0,2,2], versionTags = []})),Dependency (PackageName "parallel") (ThisVersion (Version {versionBranch = [3,2,0,3], versionTags = []})),Dependency (PackageName "mtl") (ThisVersion (Version {versionBranch = [2,1,2], versionTags = []})),Dependency (PackageName "directory") (ThisVersion (Version {versionBranch = [1,2,0,1], versionTags = []})),Dependency (PackageName "deepseq") (ThisVersion (Version {versionBranch = [1,3,0,1], versionTags = []})),Dependency (PackageName "dawg") (ThisVersion (Version {versionBranch = [0,1,0,0], versionTags = []})),Dependency (PackageName "containers") (ThisVersion (Version {versionBranch = [0,5,0,0], versionTags = []})),Dependency (PackageName "binary") (ThisVersion (Version {versionBranch = [0,7,0,1], versionTags = []})),Dependency (PackageName "base") (ThisVersion (Version {versionBranch = [4,6,0,1], versionTags = []})),Dependency (PackageName "array") (ThisVersion (Version {versionBranch = [0,4,0,1], versionTags = []}))], configConfigurationsFlags = [], configTests = Flag False, configBenchmarks = Flag False, configLibCoverage = Flag False}, extraConfigArgs = [], installDirTemplates = InstallDirs {prefix = "C:\\Users\\Kutta\\AppData\\Roaming\\cabal", bindir = "$prefix\\bin", libdir = "$prefix", libsubdir = "$pkgid\\$compiler", dynlibdir = "$libdir", libexecdir = "$prefix\\$pkgid", progdir = "$libdir\\hugs\\programs", includedir = "$libdir\\$libsubdir\\include", datadir = "$prefix", datasubdir = "$pkgid", docdir = "$datadir\\doc\\$pkgid", mandir = "$datadir\\man", htmldir = "$docdir\\html", haddockdir = "$htmldir"}, compiler = Compiler {compilerId = CompilerId GHC (Version {versionBranch = [7,6,2], versionTags = []}), compilerLanguages = [(Haskell98,"-XHaskell98"),(Haskell2010,"-XHaskell2010")], compilerExtensions = [(UnknownExtension "Haskell98","-XHaskell98"),(UnknownExtension "Haskell2010","-XHaskell2010"),(UnknownExtension "Unsafe","-XUnsafe"),(EnableExtension Trustworthy,"-XTrustworthy"),(EnableExtension Safe,"-XSafe"),(EnableExtension CPP,"-XCPP"),(DisableExtension CPP,"-XNoCPP"),(EnableExtension PostfixOperators,"-XPostfixOperators"),(DisableExtension PostfixOperators,"-XNoPostfixOperators"),(EnableExtension TupleSections,"-XTupleSections"),(DisableExtension TupleSections,"-XNoTupleSections"),(EnableExtension PatternGuards,"-XPatternGuards"),(DisableExtension PatternGuards,"-XNoPatternGuards"),(EnableExtension UnicodeSyntax,"-XUnicodeSyntax"),(DisableExtension UnicodeSyntax,"-XNoUnicodeSyntax"),(EnableExtension MagicHash,"-XMagicHash"),(DisableExtension MagicHash,"-XNoMagicHash"),(EnableExtension PolymorphicComponents,"-XPolymorphicComponents"),(DisableExtension PolymorphicComponents,"-XNoPolymorphicComponents"),(EnableExtension ExistentialQuantification,"-XExistentialQuantification"),(DisableExtension ExistentialQuantification,"-XNoExistentialQuantification"),(EnableExtension KindSignatures,"-XKindSignatures"),(DisableExtension KindSignatures,"-XNoKindSignatures"),(EnableExtension EmptyDataDecls,"-XEmptyDataDecls"),(DisableExtension EmptyDataDecls,"-XNoEmptyDataDecls"),(EnableExtension ParallelListComp,"-XParallelListComp"),(DisableExtension ParallelListComp,"-XNoParallelListComp"),(EnableExtension TransformListComp,"-XTransformListComp"),(DisableExtension TransformListComp,"-XNoTransformListComp"),(UnknownExtension "MonadComprehensions","-XMonadComprehensions"),(UnknownExtension "NoMonadComprehensions","-XNoMonadComprehensions"),(EnableExtension ForeignFunctionInterface,"-XForeignFunctionInterface"),(DisableExtension ForeignFunctionInterface,"-XNoForeignFunctionInterface"),(EnableExtension UnliftedFFITypes,"-XUnliftedFFITypes"),(DisableExtension UnliftedFFITypes,"-XNoUnliftedFFITypes"),(UnknownExtension "InterruptibleFFI","-XInterruptibleFFI"),(UnknownExtension "NoInterruptibleFFI","-XNoInterruptibleFFI"),(UnknownExtension "CApiFFI","-XCApiFFI"),(UnknownExtension "NoCApiFFI","-XNoCApiFFI"),(EnableExtension GHCForeignImportPrim,"-XGHCForeignImportPrim"),(DisableExtension GHCForeignImportPrim,"-XNoGHCForeignImportPrim"),(EnableExtension LiberalTypeSynonyms,"-XLiberalTypeSynonyms"),(DisableExtension LiberalTypeSynonyms,"-XNoLiberalTypeSynonyms"),(EnableExtension Rank2Types,"-XRank2Types"),(DisableExtension Rank2Types,"-XNoRank2Types"),(EnableExtension RankNTypes,"-XRankNTypes"),(DisableExtension RankNTypes,"-XNoRankNTypes"),(EnableExtension ImpredicativeTypes,"-XImpredicativeTypes"),(DisableExtension ImpredicativeTypes,"-XNoImpredicativeTypes"),(EnableExtension TypeOperators,"-XTypeOperators"),(DisableExtension TypeOperators,"-XNoTypeOperators"),(UnknownExtension "ExplicitNamespaces","-XExplicitNamespaces"),(UnknownExtension "NoExplicitNamespaces","-XNoExplicitNamespaces"),(EnableExtension RecursiveDo,"-XRecursiveDo"),(DisableExtension RecursiveDo,"-XNoRecursiveDo"),(EnableExtension DoRec,"-XDoRec"),(DisableExtension DoRec,"-XNoDoRec"),(EnableExtension Arrows,"-XArrows"),(DisableExtension Arrows,"-XNoArrows"),(UnknownExtension "ParallelArrays","-XParallelArrays"),(UnknownExtension "NoParallelArrays","-XNoParallelArrays"),(EnableExtension TemplateHaskell,"-XTemplateHaskell"),(DisableExtension TemplateHaskell,"-XNoTemplateHaskell"),(EnableExtension QuasiQuotes,"-XQuasiQuotes"),(DisableExtension QuasiQuotes,"-XNoQuasiQuotes"),(EnableExtension ImplicitPrelude,"-XImplicitPrelude"),(DisableExtension ImplicitPrelude,"-XNoImplicitPrelude"),(EnableExtension RecordWildCards,"-XRecordWildCards"),(DisableExtension RecordWildCards,"-XNoRecordWildCards"),(EnableExtension NamedFieldPuns,"-XNamedFieldPuns"),(DisableExtension NamedFieldPuns,"-XNoNamedFieldPuns"),(EnableExtension RecordPuns,"-XRecordPuns"),(DisableExtension RecordPuns,"-XNoRecordPuns"),(EnableExtension DisambiguateRecordFields,"-XDisambiguateRecordFields"),(DisableExtension DisambiguateRecordFields,"-XNoDisambiguateRecordFields"),(EnableExtension OverloadedStrings,"-XOverloadedStrings"),(DisableExtension OverloadedStrings,"-XNoOverloadedStrings"),(EnableExtension GADTs,"-XGADTs"),(DisableExtension GADTs,"-XNoGADTs"),(EnableExtension GADTSyntax,"-XGADTSyntax"),(DisableExtension GADTSyntax,"-XNoGADTSyntax"),(EnableExtension ViewPatterns,"-XViewPatterns"),(DisableExtension ViewPatterns,"-XNoViewPatterns"),(EnableExtension TypeFamilies,"-XTypeFamilies"),(DisableExtension TypeFamilies,"-XNoTypeFamilies"),(EnableExtension BangPatterns,"-XBangPatterns"),(DisableExtension BangPatterns,"-XNoBangPatterns"),(EnableExtension MonomorphismRestriction,"-XMonomorphismRestriction"),(DisableExtension MonomorphismRestriction,"-XNoMonomorphismRestriction"),(EnableExtension NPlusKPatterns,"-XNPlusKPatterns"),(DisableExtension NPlusKPatterns,"-XNoNPlusKPatterns"),(EnableExtension DoAndIfThenElse,"-XDoAndIfThenElse"),(DisableExtension DoAndIfThenElse,"-XNoDoAndIfThenElse"),(EnableExtension RebindableSyntax,"-XRebindableSyntax"),(DisableExtension RebindableSyntax,"-XNoRebindableSyntax"),(EnableExtension ConstraintKinds,"-XConstraintKinds"),(DisableExtension ConstraintKinds,"-XNoConstraintKinds"),(UnknownExtension "PolyKinds","-XPolyKinds"),(UnknownExtension "NoPolyKinds","-XNoPolyKinds"),(UnknownExtension "DataKinds","-XDataKinds"),(UnknownExtension "NoDataKinds","-XNoDataKinds"),(UnknownExtension "InstanceSigs","-XInstanceSigs"),(UnknownExtension "NoInstanceSigs","-XNoInstanceSigs"),(EnableExtension MonoPatBinds,"-XMonoPatBinds"),(DisableExtension MonoPatBinds,"-XNoMonoPatBinds"),(EnableExtension ExplicitForAll,"-XExplicitForAll"),(DisableExtension ExplicitForAll,"-XNoExplicitForAll"),(UnknownExtension "AlternativeLayoutRule","-XAlternativeLayoutRule"),(UnknownExtension "NoAlternativeLayoutRule","-XNoAlternativeLayoutRule"),(UnknownExtension "AlternativeLayoutRuleTransitional","-XAlternativeLayoutRuleTransitional"),(UnknownExtension "NoAlternativeLayoutRuleTransitional","-XNoAlternativeLayoutRuleTransitional"),(EnableExtension DatatypeContexts,"-XDatatypeContexts"),(DisableExtension DatatypeContexts,"-XNoDatatypeContexts"),(EnableExtension NondecreasingIndentation,"-XNondecreasingIndentation"),(DisableExtension NondecreasingIndentation,"-XNoNondecreasingIndentation"),(UnknownExtension "RelaxedLayout","-XRelaxedLayout"),(UnknownExtension "NoRelaxedLayout","-XNoRelaxedLayout"),(UnknownExtension "TraditionalRecordSyntax","-XTraditionalRecordSyntax"),(UnknownExtension "NoTraditionalRecordSyntax","-XNoTraditionalRecordSyntax"),(UnknownExtension "LambdaCase","-XLambdaCase"),(UnknownExtension "NoLambdaCase","-XNoLambdaCase"),(UnknownExtension "MultiWayIf","-XMultiWayIf"),(UnknownExtension "NoMultiWayIf","-XNoMultiWayIf"),(EnableExtension MonoLocalBinds,"-XMonoLocalBinds"),(DisableExtension MonoLocalBinds,"-XNoMonoLocalBinds"),(EnableExtension RelaxedPolyRec,"-XRelaxedPolyRec"),(DisableExtension RelaxedPolyRec,"-XNoRelaxedPolyRec"),(EnableExtension ExtendedDefaultRules,"-XExtendedDefaultRules"),(DisableExtension ExtendedDefaultRules,"-XNoExtendedDefaultRules"),(EnableExtension ImplicitParams,"-XImplicitParams"),(DisableExtension ImplicitParams,"-XNoImplicitParams"),(EnableExtension ScopedTypeVariables,"-XScopedTypeVariables"),(DisableExtension ScopedTypeVariables,"-XNoScopedTypeVariables"),(EnableExtension PatternSignatures,"-XPatternSignatures"),(DisableExtension PatternSignatures,"-XNoPatternSignatures"),(EnableExtension UnboxedTuples,"-XUnboxedTuples"),(DisableExtension UnboxedTuples,"-XNoUnboxedTuples"),(EnableExtension StandaloneDeriving,"-XStandaloneDeriving"),(DisableExtension StandaloneDeriving,"-XNoStandaloneDeriving"),(EnableExtension DeriveDataTypeable,"-XDeriveDataTypeable"),(DisableExtension DeriveDataTypeable,"-XNoDeriveDataTypeable"),(EnableExtension DeriveFunctor,"-XDeriveFunctor"),(DisableExtension DeriveFunctor,"-XNoDeriveFunctor"),(EnableExtension DeriveTraversable,"-XDeriveTraversable"),(DisableExtension DeriveTraversable,"-XNoDeriveTraversable"),(EnableExtension DeriveFoldable,"-XDeriveFoldable"),(DisableExtension DeriveFoldable,"-XNoDeriveFoldable"),(UnknownExtension "DeriveGeneric","-XDeriveGeneric"),(UnknownExtension "NoDeriveGeneric","-XNoDeriveGeneric"),(UnknownExtension "DefaultSignatures","-XDefaultSignatures"),(UnknownExtension "NoDefaultSignatures","-XNoDefaultSignatures"),(EnableExtension TypeSynonymInstances,"-XTypeSynonymInstances"),(DisableExtension TypeSynonymInstances,"-XNoTypeSynonymInstances"),(EnableExtension FlexibleContexts,"-XFlexibleContexts"),(DisableExtension FlexibleContexts,"-XNoFlexibleContexts"),(EnableExtension FlexibleInstances,"-XFlexibleInstances"),(DisableExtension FlexibleInstances,"-XNoFlexibleInstances"),(EnableExtension ConstrainedClassMethods,"-XConstrainedClassMethods"),(DisableExtension ConstrainedClassMethods,"-XNoConstrainedClassMethods"),(EnableExtension MultiParamTypeClasses,"-XMultiParamTypeClasses"),(DisableExtension MultiParamTypeClasses,"-XNoMultiParamTypeClasses"),(EnableExtension FunctionalDependencies,"-XFunctionalDependencies"),(DisableExtension FunctionalDependencies,"-XNoFunctionalDependencies"),(EnableExtension GeneralizedNewtypeDeriving,"-XGeneralizedNewtypeDeriving"),(DisableExtension GeneralizedNewtypeDeriving,"-XNoGeneralizedNewtypeDeriving"),(EnableExtension OverlappingInstances,"-XOverlappingInstances"),(DisableExtension OverlappingInstances,"-XNoOverlappingInstances"),(EnableExtension UndecidableInstances,"-XUndecidableInstances"),(DisableExtension UndecidableInstances,"-XNoUndecidableInstances"),(EnableExtension IncoherentInstances,"-XIncoherentInstances"),(DisableExtension IncoherentInstances,"-XNoIncoherentInstances"),(EnableExtension PackageImports,"-XPackageImports"),(DisableExtension PackageImports,"-XNoPackageImports")]}, buildDir = "dist\\build", scratchDir = "dist\\scratch", libraryConfig = Nothing, executableConfigs = [("scrabble-bot",ComponentLocalBuildInfo {componentPackageDeps = [(InstalledPackageId "array-0.4.0.1-bfd0744e4240f3fbe5e21e5a1f6d3c69",PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,4,0,1], versionTags = []}}),(InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,6,0,1], versionTags = []}}),(InstalledPackageId "binary-0.7.0.1-0be0f7354c61af224ee397947ced9939",PackageIdentifier {pkgName = PackageName "binary", pkgVersion = Version {versionBranch = [0,7,0,1], versionTags = []}}),(InstalledPackageId "containers-0.5.0.0-d4a3d8ae809dae56ee705aaff19b803a",PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,5,0,0], versionTags = []}}),(InstalledPackageId "dawg-0.1.0.0-4a7df41d60724ebc7b5e8240f6bb1e23",PackageIdentifier {pkgName = PackageName "dawg", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}),(InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9",PackageIdentifier {pkgName = PackageName "deepseq", pkgVersion = Version {versionBranch = [1,3,0,1], versionTags = []}}),(InstalledPackageId "directory-1.2.0.1-8b109efdd71642198f9e0c7f99c493c3",PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,2,0,1], versionTags = []}}),(InstalledPackageId "mtl-2.1.2-36ff22533b21e2182d8d4647bfd2b3e7",PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [2,1,2], versionTags = []}}),(InstalledPackageId "parallel-3.2.0.3-4934b8e3b26e3669c45cff880fb393c6",PackageIdentifier {pkgName = PackageName "parallel", pkgVersion = Version {versionBranch = [3,2,0,3], versionTags = []}}),(InstalledPackageId "split-0.2.2-3dea0531c354d1f77418c01696221e4c",PackageIdentifier {pkgName = PackageName "split", pkgVersion = Version {versionBranch = [0,2,2], versionTags = []}})]})], compBuildOrder = [CExeName "scrabble-bot"], testSuiteConfigs = [], benchmarkConfigs = [], installedPkgs = PackageIndex (fromList [(InstalledPackageId "Win32-2.3.0.0-f5882a1b36e1488320b4e9b543e160a3",InstalledPackageInfo {installedPackageId = InstalledPackageId "Win32-2.3.0.0-f5882a1b36e1488320b4e9b543e160a3", sourcePackageId = PackageIdentifier {pkgName = PackageName "Win32", pkgVersion = Version {versionBranch = [2,3,0,0], versionTags = []}}, license = BSD3, copyright = "Alastair Reid, 1999-2003", maintainer = "Bryan O'Sullivan <bos@serpentine.com>", author = "Alastair Reid", stability = "", homepage = "https://github.com/haskell/win32", pkgUrl = "", synopsis = "A binding to part of the Win32 library", description = "A binding to part of the Win32 library.", category = "System, Graphics", exposed = True, exposedModules = [ModuleName ["Graphics","Win32","GDI"],ModuleName ["Graphics","Win32","GDI","Bitmap"],ModuleName ["Graphics","Win32","GDI","Brush"],ModuleName ["Graphics","Win32","GDI","Clip"],ModuleName ["Graphics","Win32","GDI","Font"],ModuleName ["Graphics","Win32","GDI","Graphics2D"],ModuleName ["Graphics","Win32","GDI","HDC"],ModuleName ["Graphics","Win32","GDI","Palette"],ModuleName ["Graphics","Win32","GDI","Path"],ModuleName ["Graphics","Win32","GDI","Pen"],ModuleName ["Graphics","Win32","GDI","Region"],ModuleName ["Graphics","Win32","GDI","Types"],ModuleName ["Graphics","Win32"],ModuleName ["Graphics","Win32","Control"],ModuleName ["Graphics","Win32","Dialogue"],ModuleName ["Graphics","Win32","Icon"],ModuleName ["Graphics","Win32","Key"],ModuleName ["Graphics","Win32","Menu"],ModuleName ["Graphics","Win32","Message"],ModuleName ["Graphics","Win32","Misc"],ModuleName ["Graphics","Win32","Resource"],ModuleName ["Graphics","Win32","Window"],ModuleName ["System","Win32"],ModuleName ["System","Win32","DebugApi"],ModuleName ["System","Win32","DLL"],ModuleName ["System","Win32","File"],ModuleName ["System","Win32","FileMapping"],ModuleName ["System","Win32","Info"],ModuleName ["System","Win32","Mem"],ModuleName ["System","Win32","NLS"],ModuleName ["System","Win32","Process"],ModuleName ["System","Win32","Registry"],ModuleName ["System","Win32","SimpleMAPI"],ModuleName ["System","Win32","Time"],ModuleName ["System","Win32","Console"],ModuleName ["System","Win32","Security"],ModuleName ["System","Win32","Types"],ModuleName ["System","Win32","Shell"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\Win32-2.3.0.0"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\Win32-2.3.0.0"], hsLibraries = ["HSWin32-2.3.0.0"], extraLibraries = ["user32","gdi32","winmm","advapi32","shell32","shfolder"], extraGHCiLibraries = [], includeDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\Win32-2.3.0.0\\include"], includes = ["HsWin32.h","HsGDI.h","WndProc.h"], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "bytestring-0.10.0.2-877e18a069185734787b0f7773347bcc"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/Win32-2.3.0.0\\Win32.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/Win32-2.3.0.0"]}),(InstalledPackageId "array-0.4.0.1-bfd0744e4240f3fbe5e21e5a1f6d3c69",InstalledPackageInfo {installedPackageId = InstalledPackageId "array-0.4.0.1-bfd0744e4240f3fbe5e21e5a1f6d3c69", sourcePackageId = PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,4,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Mutable and immutable arrays", description = "This package defines the classes @IArray@ of immutable arrays and\n@MArray@ of arrays mutable within appropriate monads, as well as\nsome instances of these classes.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Array","Base"],ModuleName ["Data","Array","IArray"],ModuleName ["Data","Array","IO"],ModuleName ["Data","Array","IO","Safe"],ModuleName ["Data","Array","IO","Internals"],ModuleName ["Data","Array","MArray"],ModuleName ["Data","Array","MArray","Safe"],ModuleName ["Data","Array","ST"],ModuleName ["Data","Array","ST","Safe"],ModuleName ["Data","Array","Storable"],ModuleName ["Data","Array","Storable","Safe"],ModuleName ["Data","Array","Storable","Internals"],ModuleName ["Data","Array","Unboxed"],ModuleName ["Data","Array","Unsafe"],ModuleName ["Data","Array"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\array-0.4.0.1"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\array-0.4.0.1"], hsLibraries = ["HSarray-0.4.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/array-0.4.0.1\\array.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/array-0.4.0.1"]}),(InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageInfo {installedPackageId = InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027", sourcePackageId = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,6,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Basic libraries", description = "This package contains the Prelude and its support libraries,\nand a large collection of useful libraries ranging from data\nstructures to parsing combinators and debugging utilities.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","IO","Encoding","CodePage","Table"],ModuleName ["GHC","Conc","Windows"],ModuleName ["GHC","Windows"],ModuleName ["Foreign","Concurrent"],ModuleName ["GHC","Arr"],ModuleName ["GHC","Base"],ModuleName ["GHC","Char"],ModuleName ["GHC","Conc"],ModuleName ["GHC","Conc","IO"],ModuleName ["GHC","Conc","Signal"],ModuleName ["GHC","Conc","Sync"],ModuleName ["GHC","ConsoleHandler"],ModuleName ["GHC","Constants"],ModuleName ["GHC","Desugar"],ModuleName ["GHC","Enum"],ModuleName ["GHC","Environment"],ModuleName ["GHC","Err"],ModuleName ["GHC","Exception"],ModuleName ["GHC","Exts"],ModuleName ["GHC","Fingerprint"],ModuleName ["GHC","Fingerprint","Type"],ModuleName ["GHC","Float"],ModuleName ["GHC","Float","ConversionUtils"],ModuleName ["GHC","Float","RealFracMethods"],ModuleName ["GHC","Foreign"],ModuleName ["GHC","ForeignPtr"],ModuleName ["GHC","Generics"],ModuleName ["GHC","GHCi"],ModuleName ["GHC","Handle"],ModuleName ["GHC","IO"],ModuleName ["GHC","IO","Buffer"],ModuleName ["GHC","IO","BufferedIO"],ModuleName ["GHC","IO","Device"],ModuleName ["GHC","IO","Encoding"],ModuleName ["GHC","IO","Encoding","CodePage"],ModuleName ["GHC","IO","Encoding","Failure"],ModuleName ["GHC","IO","Encoding","Iconv"],ModuleName ["GHC","IO","Encoding","Latin1"],ModuleName ["GHC","IO","Encoding","Types"],ModuleName ["GHC","IO","Encoding","UTF16"],ModuleName ["GHC","IO","Encoding","UTF32"],ModuleName ["GHC","IO","Encoding","UTF8"],ModuleName ["GHC","IO","Exception"],ModuleName ["GHC","IO","FD"],ModuleName ["GHC","IO","Handle"],ModuleName ["GHC","IO","Handle","FD"],ModuleName ["GHC","IO","Handle","Internals"],ModuleName ["GHC","IO","Handle","Text"],ModuleName ["GHC","IO","Handle","Types"],ModuleName ["GHC","IO","IOMode"],ModuleName ["GHC","IOArray"],ModuleName ["GHC","IOBase"],ModuleName ["GHC","IORef"],ModuleName ["GHC","IP"],ModuleName ["GHC","Int"],ModuleName ["GHC","List"],ModuleName ["GHC","MVar"],ModuleName ["GHC","Num"],ModuleName ["GHC","PArr"],ModuleName ["GHC","Pack"],ModuleName ["GHC","Ptr"],ModuleName ["GHC","Read"],ModuleName ["GHC","Real"],ModuleName ["GHC","ST"],ModuleName ["GHC","Stack"],ModuleName ["GHC","Stats"],ModuleName ["GHC","Show"],ModuleName ["GHC","Stable"],ModuleName ["GHC","Storable"],ModuleName ["GHC","STRef"],ModuleName ["GHC","TypeLits"],ModuleName ["GHC","TopHandler"],ModuleName ["GHC","Unicode"],ModuleName ["GHC","Weak"],ModuleName ["GHC","Word"],ModuleName ["System","Timeout"],ModuleName ["Control","Applicative"],ModuleName ["Control","Arrow"],ModuleName ["Control","Category"],ModuleName ["Control","Concurrent"],ModuleName ["Control","Concurrent","Chan"],ModuleName ["Control","Concurrent","MVar"],ModuleName ["Control","Concurrent","QSem"],ModuleName ["Control","Concurrent","QSemN"],ModuleName ["Control","Concurrent","SampleVar"],ModuleName ["Control","Exception"],ModuleName ["Control","Exception","Base"],ModuleName ["Control","Monad"],ModuleName ["Control","Monad","Fix"],ModuleName ["Control","Monad","Instances"],ModuleName ["Control","Monad","ST"],ModuleName ["Control","Monad","ST","Safe"],ModuleName ["Control","Monad","ST","Unsafe"],ModuleName ["Control","Monad","ST","Lazy"],ModuleName ["Control","Monad","ST","Lazy","Safe"],ModuleName ["Control","Monad","ST","Lazy","Unsafe"],ModuleName ["Control","Monad","ST","Strict"],ModuleName ["Control","Monad","Zip"],ModuleName ["Data","Bits"],ModuleName ["Data","Bool"],ModuleName ["Data","Char"],ModuleName ["Data","Complex"],ModuleName ["Data","Dynamic"],ModuleName ["Data","Either"],ModuleName ["Data","Eq"],ModuleName ["Data","Data"],ModuleName ["Data","Fixed"],ModuleName ["Data","Foldable"],ModuleName ["Data","Function"],ModuleName ["Data","Functor"],ModuleName ["Data","HashTable"],ModuleName ["Data","IORef"],ModuleName ["Data","Int"],ModuleName ["Data","Ix"],ModuleName ["Data","List"],ModuleName ["Data","Maybe"],ModuleName ["Data","Monoid"],ModuleName ["Data","Ord"],ModuleName ["Data","Ratio"],ModuleName ["Data","STRef"],ModuleName ["Data","STRef","Lazy"],ModuleName ["Data","STRef","Strict"],ModuleName ["Data","String"],ModuleName ["Data","Traversable"],ModuleName ["Data","Tuple"],ModuleName ["Data","Typeable"],ModuleName ["Data","Typeable","Internal"],ModuleName ["Data","Unique"],ModuleName ["Data","Version"],ModuleName ["Data","Word"],ModuleName ["Debug","Trace"],ModuleName ["Foreign"],ModuleName ["Foreign","C"],ModuleName ["Foreign","C","Error"],ModuleName ["Foreign","C","String"],ModuleName ["Foreign","C","Types"],ModuleName ["Foreign","ForeignPtr"],ModuleName ["Foreign","ForeignPtr","Safe"],ModuleName ["Foreign","ForeignPtr","Unsafe"],ModuleName ["Foreign","Marshal"],ModuleName ["Foreign","Marshal","Alloc"],ModuleName ["Foreign","Marshal","Array"],ModuleName ["Foreign","Marshal","Error"],ModuleName ["Foreign","Marshal","Pool"],ModuleName ["Foreign","Marshal","Safe"],ModuleName ["Foreign","Marshal","Utils"],ModuleName ["Foreign","Marshal","Unsafe"],ModuleName ["Foreign","Ptr"],ModuleName ["Foreign","Safe"],ModuleName ["Foreign","StablePtr"],ModuleName ["Foreign","Storable"],ModuleName ["Numeric"],ModuleName ["Prelude"],ModuleName ["System","Console","GetOpt"],ModuleName ["System","CPUTime"],ModuleName ["System","Environment"],ModuleName ["System","Exit"],ModuleName ["System","IO"],ModuleName ["System","IO","Error"],ModuleName ["System","IO","Unsafe"],ModuleName ["System","Info"],ModuleName ["System","Mem"],ModuleName ["System","Mem","StableName"],ModuleName ["System","Mem","Weak"],ModuleName ["System","Posix","Internals"],ModuleName ["System","Posix","Types"],ModuleName ["Text","ParserCombinators","ReadP"],ModuleName ["Text","ParserCombinators","ReadPrec"],ModuleName ["Text","Printf"],ModuleName ["Text","Read"],ModuleName ["Text","Read","Lex"],ModuleName ["Text","Show"],ModuleName ["Text","Show","Functions"],ModuleName ["Unsafe","Coerce"]], hiddenModules = [ModuleName ["Control","Monad","ST","Imp"],ModuleName ["Control","Monad","ST","Lazy","Imp"],ModuleName ["Foreign","ForeignPtr","Imp"],ModuleName ["System","Environment","ExecutablePath"]], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\base-4.6.0.1"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\base-4.6.0.1"], hsLibraries = ["HSbase-4.6.0.1"], extraLibraries = ["wsock32","user32","shell32"], extraGHCiLibraries = [], includeDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\base-4.6.0.1\\include"], includes = ["HsBase.h"], depends = [InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401",InstalledPackageId "integer-gmp-0.5.0.0-49dcb29a60dab14e03e6dd01e871a242",InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/base-4.6.0.1\\base.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/base-4.6.0.1"]}),(InstalledPackageId "binary-0.7.0.1-0be0f7354c61af224ee397947ced9939",InstalledPackageInfo {installedPackageId = InstalledPackageId "binary-0.7.0.1-0be0f7354c61af224ee397947ced9939", sourcePackageId = PackageIdentifier {pkgName = PackageName "binary", pkgVersion = Version {versionBranch = [0,7,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Lennart Kolmodin, Don Stewart <dons00@gmail.com>", author = "Lennart Kolmodin <kolmodin@gmail.com>", stability = "provisional", homepage = "https://github.com/kolmodin/binary", pkgUrl = "", synopsis = "Binary serialisation for Haskell values using lazy ByteStrings", description = "Efficient, pure binary serialisation using lazy ByteStrings.\nHaskell values may be encoded to and from binary formats,\nwritten to disk as binary, or sent over the network.\nThe format used can be automatically generated, or\nyou can choose to implement a custom format if needed.\nSerialisation speeds of over 1 G\\/sec have been observed,\nso this library should be suitable for high performance\nscenarios.", category = "Data, Parsing", exposed = True, exposedModules = [ModuleName ["Data","Binary"],ModuleName ["Data","Binary","Put"],ModuleName ["Data","Binary","Get"],ModuleName ["Data","Binary","Get","Internal"],ModuleName ["Data","Binary","Builder"],ModuleName ["Data","Binary","Builder","Internal"]], hiddenModules = [ModuleName ["Data","Binary","Generic"],ModuleName ["Data","Binary","Builder","Base"],ModuleName ["Data","Binary","Class"]], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\binary-0.7.0.1\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\binary-0.7.0.1\\ghc-7.6.2"], hsLibraries = ["HSbinary-0.7.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.1-bfd0744e4240f3fbe5e21e5a1f6d3c69",InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "bytestring-0.10.0.2-877e18a069185734787b0f7773347bcc",InstalledPackageId "containers-0.5.0.0-d4a3d8ae809dae56ee705aaff19b803a"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\binary-0.7.0.1\\html\\binary.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\binary-0.7.0.1\\html"]}),(InstalledPackageId "builtin_rts",InstalledPackageInfo {installedPackageId = InstalledPackageId "builtin_rts", sourcePackageId = PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "glasgow-haskell-users@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "", description = "", category = "", exposed = True, exposedModules = [], hiddenModules = [], trusted = False, importDirs = [], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib"], hsLibraries = ["HSrts"], extraLibraries = ["m","wsock32","gdi32","winmm"], extraGHCiLibraries = [], includeDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/include"], includes = ["Stg.h"], depends = [], hugsOptions = [], ccOptions = [], ldOptions = ["-u","ghczmprim_GHCziTypes_Izh_static_info","-u","ghczmprim_GHCziTypes_Czh_static_info","-u","ghczmprim_GHCziTypes_Fzh_static_info","-u","ghczmprim_GHCziTypes_Dzh_static_info","-u","base_GHCziPtr_Ptr_static_info","-u","ghczmprim_GHCziTypes_Wzh_static_info","-u","base_GHCziInt_I8zh_static_info","-u","base_GHCziInt_I16zh_static_info","-u","base_GHCziInt_I32zh_static_info","-u","base_GHCziInt_I64zh_static_info","-u","base_GHCziWord_W8zh_static_info","-u","base_GHCziWord_W16zh_static_info","-u","base_GHCziWord_W32zh_static_info","-u","base_GHCziWord_W64zh_static_info","-u","base_GHCziStable_StablePtr_static_info","-u","ghczmprim_GHCziTypes_Izh_con_info","-u","ghczmprim_GHCziTypes_Czh_con_info","-u","ghczmprim_GHCziTypes_Fzh_con_info","-u","ghczmprim_GHCziTypes_Dzh_con_info","-u","base_GHCziPtr_Ptr_con_info","-u","base_GHCziPtr_FunPtr_con_info","-u","base_GHCziStable_StablePtr_con_info","-u","ghczmprim_GHCziTypes_False_closure","-u","ghczmprim_GHCziTypes_True_closure","-u","base_GHCziPack_unpackCString_closure","-u","base_GHCziIOziException_stackOverflow_closure","-u","base_GHCziIOziException_heapOverflow_closure","-u","base_ControlziExceptionziBase_nonTermination_closure","-u","base_GHCziIOziException_blockedIndefinitelyOnMVar_closure","-u","base_GHCziIOziException_blockedIndefinitelyOnSTM_closure","-u","base_ControlziExceptionziBase_nestedAtomically_closure","-u","base_GHCziWeak_runFinalizzerBatch_closure","-u","base_GHCziTopHandler_flushStdHandles_closure","-u","base_GHCziTopHandler_runIO_closure","-u","base_GHCziTopHandler_runNonIO_closure","-u","base_GHCziConcziIO_ensureIOManagerIsRunning_closure","-u","base_GHCziConcziSync_runSparks_closure","-u","base_GHCziConcziSignal_runHandlers_closure"], frameworkDirs = [], frameworks = [], haddockInterfaces = [], haddockHTMLs = []}),(InstalledPackageId "bytestring-0.10.0.2-877e18a069185734787b0f7773347bcc",InstalledPackageInfo {installedPackageId = InstalledPackageId "bytestring-0.10.0.2-877e18a069185734787b0f7773347bcc", sourcePackageId = PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,10,0,2], versionTags = []}}, license = BSD3, copyright = "Copyright (c) Don Stewart          2005-2009,\n(c) Duncan Coutts        2006-2012,\n(c) David Roundy         2003-2005,\n(c) Jasper Van der Jeugt 2010,\n(c) Simon Meier          2010-2011.", maintainer = "Don Stewart <dons00@gmail.com>,\nDuncan Coutts <duncan@community.haskell.org>", author = "Don Stewart,\nDuncan Coutts", stability = "", homepage = "", pkgUrl = "", synopsis = "Fast, compact, strict and lazy byte strings with a list interface", description = "An efficient compact, immutable byte string type (both strict and lazy)\nsuitable for binary or 8-bit character data.\n\nThe 'ByteString' type represents sequences of bytes or 8-bit characters.\nIt is suitable for high performance use, both in terms of large data\nquantities, or high speed requirements. The 'ByteStrin'g functions follow\nthe same style as Haskell\\'s ordinary lists, so it is easy to convert code\nfrom using 'String' to 'ByteString'.\n\nTwo 'ByteString' variants are provided:\n\n* Strict 'ByteString's keep the string as a single large array. This\nmakes them convenient for passing data between C and Haskell.\n\n* Lazy 'ByteString's use a lazy list of strict chunks which makes it\nsuitable for I\\/O streaming tasks.\n\nThe @Char8@ modules provide a character-based view of the same\nunderlying 'ByteString' types. This makes it convenient to handle mixed\nbinary and 8-bit character content (which is common in many file formats\nand network protocols).\n\nThe 'Builder' module provides an efficient way to build up 'ByteString's\nin an ad-hoc way by repeated concatenation. This is ideal for fast\nserialisation or pretty printing.\n\n'ByteString's are not designed for Unicode. For Unicode strings you should\nuse the 'Text' type from the @text@ package.\n\nThese modules are intended to be imported qualified, to avoid name clashes\nwith \"Prelude\" functions, e.g.\n\n> import qualified Data.ByteString as BS", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","ByteString"],ModuleName ["Data","ByteString","Char8"],ModuleName ["Data","ByteString","Unsafe"],ModuleName ["Data","ByteString","Internal"],ModuleName ["Data","ByteString","Lazy"],ModuleName ["Data","ByteString","Lazy","Char8"],ModuleName ["Data","ByteString","Lazy","Internal"],ModuleName ["Data","ByteString","Lazy","Builder"],ModuleName ["Data","ByteString","Lazy","Builder","Extras"],ModuleName ["Data","ByteString","Lazy","Builder","ASCII"]], hiddenModules = [ModuleName ["Data","ByteString","Lazy","Builder","Internal"],ModuleName ["Data","ByteString","Lazy","Builder","BasicEncoding"],ModuleName ["Data","ByteString","Lazy","Builder","BasicEncoding","Extras"],ModuleName ["Data","ByteString","Lazy","Builder","BasicEncoding","Internal"],ModuleName ["Data","ByteString","Lazy","Builder","BasicEncoding","Binary"],ModuleName ["Data","ByteString","Lazy","Builder","BasicEncoding","ASCII"],ModuleName ["Data","ByteString","Lazy","Builder","BasicEncoding","Internal","Floating"],ModuleName ["Data","ByteString","Lazy","Builder","BasicEncoding","Internal","UncheckedShifts"],ModuleName ["Data","ByteString","Lazy","Builder","BasicEncoding","Internal","Base16"]], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\bytestring-0.10.0.2"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\bytestring-0.10.0.2"], hsLibraries = ["HSbytestring-0.10.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\bytestring-0.10.0.2\\include"], includes = ["fpstring.h"], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9",InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/bytestring-0.10.0.2\\bytestring.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/bytestring-0.10.0.2"]}),(InstalledPackageId "cereal-0.3.5.2-db4fe091ba66c45c949f1c683961ac14",InstalledPackageInfo {installedPackageId = InstalledPackageId "cereal-0.3.5.2-db4fe091ba66c45c949f1c683961ac14", sourcePackageId = PackageIdentifier {pkgName = PackageName "cereal", pkgVersion = Version {versionBranch = [0,3,5,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Trevor Elliott <trevor@galois.com>", author = "Lennart Kolmodin <kolmodin@dtek.chalmers.se>,\nGalois Inc.,\nLemmih <lemmih@gmail.com>,\nBas van Dijk <v.dijk.bas@gmail.com>", stability = "provisional", homepage = "", pkgUrl = "", synopsis = "A binary serialization library", description = "A binary serialization library, similar to binary, that introduces an isolate\nprimitive for parser isolation, and replaces the asynchronous errors with a\nuser-handleable Either type.  Similar to binary in performance, but uses a\nstrict ByteString instead of a lazy ByteString, thus restricting it to\noperating on finite inputs.", category = "Data, Parsing", exposed = True, exposedModules = [ModuleName ["Data","Serialize"],ModuleName ["Data","Serialize","Put"],ModuleName ["Data","Serialize","Get"],ModuleName ["Data","Serialize","Builder"],ModuleName ["Data","Serialize","IEEE754"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\cereal-0.3.5.2\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\cereal-0.3.5.2\\ghc-7.6.2"], hsLibraries = ["HScereal-0.3.5.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.1-bfd0744e4240f3fbe5e21e5a1f6d3c69",InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "bytestring-0.10.0.2-877e18a069185734787b0f7773347bcc",InstalledPackageId "containers-0.5.0.0-d4a3d8ae809dae56ee705aaff19b803a",InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\cereal-0.3.5.2\\html\\cereal.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\cereal-0.3.5.2\\html"]}),(InstalledPackageId "containers-0.5.0.0-d4a3d8ae809dae56ee705aaff19b803a",InstalledPackageInfo {installedPackageId = InstalledPackageId "containers-0.5.0.0-d4a3d8ae809dae56ee705aaff19b803a", sourcePackageId = PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,5,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "fox@ucw.cz", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Assorted concrete container types", description = "This package contains efficient general-purpose implementations\nof various basic immutable container types.  The declared cost of\neach operation is either worst-case or amortized, but remains\nvalid even if structures are shared.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Graph"],ModuleName ["Data","Sequence"],ModuleName ["Data","Tree"],ModuleName ["Data","IntMap"],ModuleName ["Data","IntMap","Lazy"],ModuleName ["Data","IntMap","Strict"],ModuleName ["Data","IntSet"],ModuleName ["Data","Map"],ModuleName ["Data","Map","Lazy"],ModuleName ["Data","Map","Strict"],ModuleName ["Data","Set"]], hiddenModules = [ModuleName ["Data","IntMap","Base"],ModuleName ["Data","IntSet","Base"],ModuleName ["Data","Map","Base"],ModuleName ["Data","Set","Base"],ModuleName ["Data","StrictPair"]], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\containers-0.5.0.0"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\containers-0.5.0.0"], hsLibraries = ["HScontainers-0.5.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.1-bfd0744e4240f3fbe5e21e5a1f6d3c69",InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9",InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/containers-0.5.0.0\\containers.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/containers-0.5.0.0"]}),(InstalledPackageId "dawg-0.1.0.0-4a7df41d60724ebc7b5e8240f6bb1e23",InstalledPackageInfo {installedPackageId = InstalledPackageId "dawg-0.1.0.0-4a7df41d60724ebc7b5e8240f6bb1e23", sourcePackageId = PackageIdentifier {pkgName = PackageName "dawg", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "puttamalac@gmail.com", author = "Andras Kovacs", stability = "", homepage = "", pkgUrl = "", synopsis = "Generation and traversal of highly compressed directed acyclic word graphs.", description = "", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","DAWG"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\dawg-0.1.0.0\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\dawg-0.1.0.0\\ghc-7.6.2"], hsLibraries = ["HSdawg-0.1.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "binary-0.7.0.1-0be0f7354c61af224ee397947ced9939",InstalledPackageId "containers-0.5.0.0-d4a3d8ae809dae56ee705aaff19b803a",InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9",InstalledPackageId "mtl-2.1.2-36ff22533b21e2182d8d4647bfd2b3e7",InstalledPackageId "unordered-containers-0.2.3.0-7412724f83059b677ac8bcdfbd29f082",InstalledPackageId "vector-0.10.0.1-98215d05dabc8e2b6bdc5d27e9f9f8d4",InstalledPackageId "vector-binary-instances-0.2.1.0-ad487a9f2b2a0da3dfef419875adf664"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\dawg-0.1.0.0\\html\\dawg.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\dawg-0.1.0.0\\html"]}),(InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9",InstalledPackageInfo {installedPackageId = InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9", sourcePackageId = PackageIdentifier {pkgName = PackageName "deepseq", pkgVersion = Version {versionBranch = [1,3,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Deep evaluation of data structures", description = "This package provides methods for fully evaluating data structures\n(\\\"deep evaluation\\\"). Deep evaluation is often used for adding\nstrictness to a program, e.g. in order to force pending exceptions,\nremove space leaks, or force lazy I/O to happen. It is also useful\nin parallel programs, to ensure pending work does not migrate to the\nwrong thread.\n\nThe primary use of this package is via the 'deepseq' function, a\n\\\"deep\\\" version of 'seq'. It is implemented on top of an 'NFData'\ntypeclass (\\\"Normal Form Data\\\", data structures with no unevaluated\ncomponents) which defines strategies for fully evaluating different\ndata types.\n", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","DeepSeq"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\deepseq-1.3.0.1"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\deepseq-1.3.0.1"], hsLibraries = ["HSdeepseq-1.3.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.1-bfd0744e4240f3fbe5e21e5a1f6d3c69",InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/deepseq-1.3.0.1\\deepseq.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/deepseq-1.3.0.1"]}),(InstalledPackageId "directory-1.2.0.1-8b109efdd71642198f9e0c7f99c493c3",InstalledPackageInfo {installedPackageId = InstalledPackageId "directory-1.2.0.1-8b109efdd71642198f9e0c7f99c493c3", sourcePackageId = PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,2,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "library for directory handling", description = "This package provides a library for handling directories.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Directory"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\directory-1.2.0.1"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\directory-1.2.0.1"], hsLibraries = ["HSdirectory-1.2.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\directory-1.2.0.1\\include"], includes = ["HsDirectory.h"], depends = [InstalledPackageId "Win32-2.3.0.0-f5882a1b36e1488320b4e9b543e160a3",InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "filepath-1.3.0.1-7e61d69749ae8b9e386bbcf4aa30768f",InstalledPackageId "time-1.4.0.1-e528c0932d6b2b6a4f6b62f24dc61247"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/directory-1.2.0.1\\directory.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/directory-1.2.0.1"]}),(InstalledPackageId "filepath-1.3.0.1-7e61d69749ae8b9e386bbcf4aa30768f",InstalledPackageInfo {installedPackageId = InstalledPackageId "filepath-1.3.0.1-7e61d69749ae8b9e386bbcf4aa30768f", sourcePackageId = PackageIdentifier {pkgName = PackageName "filepath", pkgVersion = Version {versionBranch = [1,3,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "", author = "Neil Mitchell", stability = "", homepage = "http://www-users.cs.york.ac.uk/~ndm/filepath/", pkgUrl = "", synopsis = "Library for manipulating FilePaths in a cross platform way.", description = "", category = "System", exposed = True, exposedModules = [ModuleName ["System","FilePath"],ModuleName ["System","FilePath","Posix"],ModuleName ["System","FilePath","Windows"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\filepath-1.3.0.1"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\filepath-1.3.0.1"], hsLibraries = ["HSfilepath-1.3.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/filepath-1.3.0.1\\filepath.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/filepath-1.3.0.1"]}),(InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401",InstalledPackageInfo {installedPackageId = InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401", sourcePackageId = PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "GHC primitives", description = "GHC primitives.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Prim"],ModuleName ["GHC","Classes"],ModuleName ["GHC","CString"],ModuleName ["GHC","Debug"],ModuleName ["GHC","Magic"],ModuleName ["GHC","PrimopWrappers"],ModuleName ["GHC","IntWord64"],ModuleName ["GHC","Tuple"],ModuleName ["GHC","Types"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\ghc-prim-0.3.0.0"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\ghc-prim-0.3.0.0"], hsLibraries = ["HSghc-prim-0.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/ghc-prim-0.3.0.0\\ghc-prim.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/ghc-prim-0.3.0.0"]}),(InstalledPackageId "hashable-1.1.2.5-a23c13791ded741cac251bf087f78d05",InstalledPackageInfo {installedPackageId = InstalledPackageId "hashable-1.1.2.5-a23c13791ded741cac251bf087f78d05", sourcePackageId = PackageIdentifier {pkgName = PackageName "hashable", pkgVersion = Version {versionBranch = [1,1,2,5], versionTags = []}}, license = BSD3, copyright = "", maintainer = "johan.tibell@gmail.com", author = "Milan Straka <fox@ucw.cz>\nJohan Tibell <johan.tibell@gmail.com>", stability = "Provisional", homepage = "http://github.com/tibbe/hashable", pkgUrl = "", synopsis = "A class for types that can be converted to a hash value", description = "This package defines a class, 'Hashable', for types that\ncan be converted to a hash value.  This class\nexists for the benefit of hashing-based data\nstructures.  The package provides instances for\nbasic types and a way to combine hash values.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","Hashable"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\hashable-1.1.2.5\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\hashable-1.1.2.5\\ghc-7.6.2"], hsLibraries = ["HShashable-1.1.2.5"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "bytestring-0.10.0.2-877e18a069185734787b0f7773347bcc",InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401",InstalledPackageId "integer-gmp-0.5.0.0-49dcb29a60dab14e03e6dd01e871a242",InstalledPackageId "text-0.11.2.3-6c12deca875260b104c0722af080d4f0"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\hashable-1.1.2.5\\html\\hashable.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\hashable-1.1.2.5\\html"]}),(InstalledPackageId "integer-gmp-0.5.0.0-49dcb29a60dab14e03e6dd01e871a242",InstalledPackageInfo {installedPackageId = InstalledPackageId "integer-gmp-0.5.0.0-49dcb29a60dab14e03e6dd01e871a242", sourcePackageId = PackageIdentifier {pkgName = PackageName "integer-gmp", pkgVersion = Version {versionBranch = [0,5,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Integer library based on GMP", description = "This package contains an Integer library based on GMP.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Integer"],ModuleName ["GHC","Integer","GMP","Internals"],ModuleName ["GHC","Integer","GMP","Prim"],ModuleName ["GHC","Integer","Logarithms"],ModuleName ["GHC","Integer","Logarithms","Internals"]], hiddenModules = [ModuleName ["GHC","Integer","Type"]], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\integer-gmp-0.5.0.0"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\integer-gmp-0.5.0.0"], hsLibraries = ["HSinteger-gmp-0.5.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/integer-gmp-0.5.0.0\\integer-gmp.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/integer-gmp-0.5.0.0"]}),(InstalledPackageId "mtl-2.1.2-36ff22533b21e2182d8d4647bfd2b3e7",InstalledPackageInfo {installedPackageId = InstalledPackageId "mtl-2.1.2-36ff22533b21e2182d8d4647bfd2b3e7", sourcePackageId = PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [2,1,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Edward Kmett <ekmett@gmail.com>", author = "Andy Gill", stability = "", homepage = "http://github.com/ekmett/mtl", pkgUrl = "", synopsis = "Monad classes, using functional dependencies", description = "Monad classes using functional dependencies, with instances\nfor various monad transformers, inspired by the paper\n/Functional Programming with Overloading and Higher-Order Polymorphism/,\nby Mark P Jones, in /Advanced School of Functional Programming/, 1995\n(<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Monad","Cont"],ModuleName ["Control","Monad","Cont","Class"],ModuleName ["Control","Monad","Error"],ModuleName ["Control","Monad","Error","Class"],ModuleName ["Control","Monad","Identity"],ModuleName ["Control","Monad","List"],ModuleName ["Control","Monad","RWS"],ModuleName ["Control","Monad","RWS","Class"],ModuleName ["Control","Monad","RWS","Lazy"],ModuleName ["Control","Monad","RWS","Strict"],ModuleName ["Control","Monad","Reader"],ModuleName ["Control","Monad","Reader","Class"],ModuleName ["Control","Monad","State"],ModuleName ["Control","Monad","State","Class"],ModuleName ["Control","Monad","State","Lazy"],ModuleName ["Control","Monad","State","Strict"],ModuleName ["Control","Monad","Trans"],ModuleName ["Control","Monad","Writer"],ModuleName ["Control","Monad","Writer","Class"],ModuleName ["Control","Monad","Writer","Lazy"],ModuleName ["Control","Monad","Writer","Strict"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\mtl-2.1.2\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\mtl-2.1.2\\ghc-7.6.2"], hsLibraries = ["HSmtl-2.1.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "transformers-0.3.0.0-404a369876d97d3814ef707114f1a62e"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\mtl-2.1.2\\html\\mtl.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\mtl-2.1.2\\html"]}),(InstalledPackageId "old-locale-1.0.0.5-1c7ec0d92a1ee33dca3d007b077944ff",InstalledPackageInfo {installedPackageId = InstalledPackageId "old-locale-1.0.0.5-1c7ec0d92a1ee33dca3d007b077944ff", sourcePackageId = PackageIdentifier {pkgName = PackageName "old-locale", pkgVersion = Version {versionBranch = [1,0,0,5], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "locale library", description = "This package provides the ability to adapt to\nlocale conventions such as date and time formats.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Locale"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\old-locale-1.0.0.5"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\old-locale-1.0.0.5"], hsLibraries = ["HSold-locale-1.0.0.5"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/old-locale-1.0.0.5\\old-locale.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/old-locale-1.0.0.5"]}),(InstalledPackageId "parallel-3.2.0.3-4934b8e3b26e3669c45cff880fb393c6",InstalledPackageInfo {installedPackageId = InstalledPackageId "parallel-3.2.0.3-4934b8e3b26e3669c45cff880fb393c6", sourcePackageId = PackageIdentifier {pkgName = PackageName "parallel", pkgVersion = Version {versionBranch = [3,2,0,3], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Parallel programming library", description = "This package provides a library for parallel programming.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Seq"],ModuleName ["Control","Parallel"],ModuleName ["Control","Parallel","Strategies"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\parallel-3.2.0.3\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\parallel-3.2.0.3\\ghc-7.6.2"], hsLibraries = ["HSparallel-3.2.0.3"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.1-bfd0744e4240f3fbe5e21e5a1f6d3c69",InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "containers-0.5.0.0-d4a3d8ae809dae56ee705aaff19b803a",InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\parallel-3.2.0.3\\html\\parallel.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\parallel-3.2.0.3\\html"]}),(InstalledPackageId "primitive-0.5.0.1-4ecd316f3b2f8d062e9b576dcc9b7561",InstalledPackageInfo {installedPackageId = InstalledPackageId "primitive-0.5.0.1-4ecd316f3b2f8d062e9b576dcc9b7561", sourcePackageId = PackageIdentifier {pkgName = PackageName "primitive", pkgVersion = Version {versionBranch = [0,5,0,1], versionTags = []}}, license = BSD3, copyright = "(c) Roman Leshchinskiy 2009-2012", maintainer = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", author = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", stability = "", homepage = "http://code.haskell.org/primitive", pkgUrl = "", synopsis = "Primitive memory-related operations", description = "\nThis package provides various primitive memory-related operations.\n\nChanges in version 0.5.0.1\n\n* Disable array copying primitives for GHC 7.6.* and earlier\n\nChanges in version 0.5\n\n* New in \"Data.Primitive.MutVar\": @atomicModifyMutVar@\n\n* Efficient block fill operations: @setByteArray@, @setAddr@\n", category = "Data", exposed = True, exposedModules = [ModuleName ["Control","Monad","Primitive"],ModuleName ["Data","Primitive"],ModuleName ["Data","Primitive","MachDeps"],ModuleName ["Data","Primitive","Types"],ModuleName ["Data","Primitive","Array"],ModuleName ["Data","Primitive","ByteArray"],ModuleName ["Data","Primitive","Addr"],ModuleName ["Data","Primitive","MutVar"]], hiddenModules = [ModuleName ["Data","Primitive","Internal","Compat"],ModuleName ["Data","Primitive","Internal","Operations"]], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\primitive-0.5.0.1\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\primitive-0.5.0.1\\ghc-7.6.2"], hsLibraries = ["HSprimitive-0.5.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\primitive-0.5.0.1\\ghc-7.6.2\\include"], includes = ["primitive-memops.h"], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\primitive-0.5.0.1\\html\\primitive.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\primitive-0.5.0.1\\html"]}),(InstalledPackageId "split-0.2.2-3dea0531c354d1f77418c01696221e4c",InstalledPackageInfo {installedPackageId = InstalledPackageId "split-0.2.2-3dea0531c354d1f77418c01696221e4c", sourcePackageId = PackageIdentifier {pkgName = PackageName "split", pkgVersion = Version {versionBranch = [0,2,2], versionTags = []}}, license = BSD3, copyright = "(c) Brent Yorgey, Louis Wasserman 2008-2012", maintainer = "byorgey@cis.upenn.edu", author = "Brent Yorgey", stability = "stable", homepage = "", pkgUrl = "", synopsis = "Combinator library for splitting lists.", description = "A collection of various methods for splitting\nlists into parts, akin to the \\\"split\\\" function\nfound in several mainstream languages. Here is\nits tale:\n\nOnce upon a time the standard \"Data.List\" module\nheld no function for splitting a list into parts\naccording to a delimiter.  Many a brave\nlambda-knight strove to add such a function, but\ntheir striving was in vain, for Lo, the Supreme\nCouncil fell to bickering amongst themselves what\nwas to be the essential nature of the One True\nFunction which could cleave a list in twain (or\nthrain, or any required number of parts).\n\nAnd thus came to pass the split package,\ncomprising divers functions for splitting a list\nasunder, each according to its nature.  And the\nSupreme Council had no longer any grounds for\nargument, for the favored method of each was\ncontained therein.\n\nTo get started, see the \"Data.List.Split\" module.", category = "List", exposed = True, exposedModules = [ModuleName ["Data","List","Split"],ModuleName ["Data","List","Split","Internals"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\split-0.2.2\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\split-0.2.2\\ghc-7.6.2"], hsLibraries = ["HSsplit-0.2.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\split-0.2.2\\html\\split.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\split-0.2.2\\html"]}),(InstalledPackageId "text-0.11.2.3-6c12deca875260b104c0722af080d4f0",InstalledPackageInfo {installedPackageId = InstalledPackageId "text-0.11.2.3-6c12deca875260b104c0722af080d4f0", sourcePackageId = PackageIdentifier {pkgName = PackageName "text", pkgVersion = Version {versionBranch = [0,11,2,3], versionTags = []}}, license = BSD3, copyright = "2009-2011 Bryan O'Sullivan, 2008-2009 Tom Harper", maintainer = "Bryan O'Sullivan <bos@serpentine.com>", author = "Bryan O'Sullivan <bos@serpentine.com>", stability = "", homepage = "https://github.com/bos/text", pkgUrl = "", synopsis = "An efficient packed Unicode text type.", description = "\nAn efficient packed, immutable Unicode text type (both strict and\nlazy), with a powerful loop fusion optimization framework.\n\nThe 'Text' type represents Unicode character strings, in a time and\nspace-efficient manner. This package provides text processing\ncapabilities that are optimized for performance critical use, both\nin terms of large data quantities and high speed.\n\nThe 'Text' type provides character-encoding, type-safe case\nconversion via whole-string case conversion functions. It also\nprovides a range of functions for converting 'Text' values to and from\n'ByteStrings', using several standard encodings.\n\nEfficient locale-sensitive support for text IO is also supported.\n\nThese modules are intended to be imported qualified, to avoid name\nclashes with Prelude functions, e.g.\n\n> import qualified Data.Text as T\n\nTo use an extended and very rich family of functions for working\nwith Unicode text (including normalization, regular expressions,\nnon-standard encodings, text breaking, and locales), see\nthe @text-icu@ package:\n<http://hackage.haskell.org/package/text-icu>\n\n&#8212;&#8212; RELEASE NOTES &#8212;&#8212;\n\nChanges in 0.11.2.0:\n\n* String literals are now converted directly from the format in\nwhich GHC stores them into 'Text', without an intermediate\ntransformation through 'String', and without inlining of\nconversion code at each site where a string literal is declared.\n", category = "Data, Text", exposed = True, exposedModules = [ModuleName ["Data","Text"],ModuleName ["Data","Text","Array"],ModuleName ["Data","Text","Encoding"],ModuleName ["Data","Text","Encoding","Error"],ModuleName ["Data","Text","Foreign"],ModuleName ["Data","Text","IO"],ModuleName ["Data","Text","Internal"],ModuleName ["Data","Text","Lazy"],ModuleName ["Data","Text","Lazy","Builder"],ModuleName ["Data","Text","Lazy","Builder","Int"],ModuleName ["Data","Text","Lazy","Builder","RealFloat"],ModuleName ["Data","Text","Lazy","Encoding"],ModuleName ["Data","Text","Lazy","IO"],ModuleName ["Data","Text","Lazy","Internal"],ModuleName ["Data","Text","Lazy","Read"],ModuleName ["Data","Text","Read"]], hiddenModules = [ModuleName ["Data","Text","Encoding","Fusion"],ModuleName ["Data","Text","Encoding","Fusion","Common"],ModuleName ["Data","Text","Encoding","Utf16"],ModuleName ["Data","Text","Encoding","Utf32"],ModuleName ["Data","Text","Encoding","Utf8"],ModuleName ["Data","Text","Fusion"],ModuleName ["Data","Text","Fusion","CaseMapping"],ModuleName ["Data","Text","Fusion","Common"],ModuleName ["Data","Text","Fusion","Internal"],ModuleName ["Data","Text","Fusion","Size"],ModuleName ["Data","Text","IO","Internal"],ModuleName ["Data","Text","Lazy","Builder","Functions"],ModuleName ["Data","Text","Lazy","Builder","RealFloat","Functions"],ModuleName ["Data","Text","Lazy","Encoding","Fusion"],ModuleName ["Data","Text","Lazy","Fusion"],ModuleName ["Data","Text","Lazy","Search"],ModuleName ["Data","Text","Private"],ModuleName ["Data","Text","Search"],ModuleName ["Data","Text","Unsafe"],ModuleName ["Data","Text","Unsafe","Base"],ModuleName ["Data","Text","UnsafeChar"],ModuleName ["Data","Text","UnsafeShift"],ModuleName ["Data","Text","Util"]], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\text-0.11.2.3\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\text-0.11.2.3\\ghc-7.6.2"], hsLibraries = ["HStext-0.11.2.3"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.1-bfd0744e4240f3fbe5e21e5a1f6d3c69",InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "bytestring-0.10.0.2-877e18a069185734787b0f7773347bcc",InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9",InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401",InstalledPackageId "integer-gmp-0.5.0.0-49dcb29a60dab14e03e6dd01e871a242"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\text-0.11.2.3\\html\\text.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\text-0.11.2.3\\html"]}),(InstalledPackageId "time-1.4.0.1-e528c0932d6b2b6a4f6b62f24dc61247",InstalledPackageInfo {installedPackageId = InstalledPackageId "time-1.4.0.1-e528c0932d6b2b6a4f6b62f24dc61247", sourcePackageId = PackageIdentifier {pkgName = PackageName "time", pkgVersion = Version {versionBranch = [1,4,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "<ashley@semantic.org>", author = "Ashley Yakeley", stability = "stable", homepage = "http://semantic.org/TimeLib/", pkgUrl = "", synopsis = "A time library", description = "A time library", category = "System", exposed = True, exposedModules = [ModuleName ["Data","Time","Calendar"],ModuleName ["Data","Time","Calendar","MonthDay"],ModuleName ["Data","Time","Calendar","OrdinalDate"],ModuleName ["Data","Time","Calendar","WeekDate"],ModuleName ["Data","Time","Calendar","Julian"],ModuleName ["Data","Time","Calendar","Easter"],ModuleName ["Data","Time","Clock"],ModuleName ["Data","Time","Clock","POSIX"],ModuleName ["Data","Time","Clock","TAI"],ModuleName ["Data","Time","LocalTime"],ModuleName ["Data","Time","Format"],ModuleName ["Data","Time"]], hiddenModules = [ModuleName ["Data","Time","Calendar","Private"],ModuleName ["Data","Time","Calendar","Days"],ModuleName ["Data","Time","Calendar","Gregorian"],ModuleName ["Data","Time","Calendar","JulianYearDay"],ModuleName ["Data","Time","Clock","Scale"],ModuleName ["Data","Time","Clock","UTC"],ModuleName ["Data","Time","Clock","CTimeval"],ModuleName ["Data","Time","Clock","UTCDiff"],ModuleName ["Data","Time","LocalTime","TimeZone"],ModuleName ["Data","Time","LocalTime","TimeOfDay"],ModuleName ["Data","Time","LocalTime","LocalTime"],ModuleName ["Data","Time","Format","Parse"]], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\time-1.4.0.1"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\time-1.4.0.1"], hsLibraries = ["HStime-1.4.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\time-1.4.0.1\\include"], includes = [], depends = [InstalledPackageId "Win32-2.3.0.0-f5882a1b36e1488320b4e9b543e160a3",InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9",InstalledPackageId "old-locale-1.0.0.5-1c7ec0d92a1ee33dca3d007b077944ff"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/time-1.4.0.1\\time.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/time-1.4.0.1"]}),(InstalledPackageId "transformers-0.3.0.0-404a369876d97d3814ef707114f1a62e",InstalledPackageInfo {installedPackageId = InstalledPackageId "transformers-0.3.0.0-404a369876d97d3814ef707114f1a62e", sourcePackageId = PackageIdentifier {pkgName = PackageName "transformers", pkgVersion = Version {versionBranch = [0,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Ross Paterson <ross@soi.city.ac.uk>", author = "Andy Gill, Ross Paterson", stability = "", homepage = "", pkgUrl = "", synopsis = "Concrete functor and monad transformers", description = "A portable library of functor and monad transformers, inspired by\nthe paper \\\"Functional Programming with Overloading and Higher-Order\nPolymorphism\\\", by Mark P Jones,\nin /Advanced School of Functional Programming/, 1995\n(<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).\n\nThis package contains:\n\n* the monad transformer class (in \"Control.Monad.Trans.Class\")\n\n* concrete functor and monad transformers, each with associated\noperations and functions to lift operations associated with other\ntransformers.\n\nIt can be used on its own in portable Haskell code, or with the monad\nclasses in the @mtl@ or @monads-tf@ packages, which automatically\nlift operations introduced by monad transformers through other\ntransformers.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Applicative","Backwards"],ModuleName ["Control","Applicative","Lift"],ModuleName ["Control","Monad","IO","Class"],ModuleName ["Control","Monad","Trans","Class"],ModuleName ["Control","Monad","Trans","Cont"],ModuleName ["Control","Monad","Trans","Error"],ModuleName ["Control","Monad","Trans","Identity"],ModuleName ["Control","Monad","Trans","List"],ModuleName ["Control","Monad","Trans","Maybe"],ModuleName ["Control","Monad","Trans","Reader"],ModuleName ["Control","Monad","Trans","RWS"],ModuleName ["Control","Monad","Trans","RWS","Lazy"],ModuleName ["Control","Monad","Trans","RWS","Strict"],ModuleName ["Control","Monad","Trans","State"],ModuleName ["Control","Monad","Trans","State","Lazy"],ModuleName ["Control","Monad","Trans","State","Strict"],ModuleName ["Control","Monad","Trans","Writer"],ModuleName ["Control","Monad","Trans","Writer","Lazy"],ModuleName ["Control","Monad","Trans","Writer","Strict"],ModuleName ["Data","Functor","Compose"],ModuleName ["Data","Functor","Constant"],ModuleName ["Data","Functor","Identity"],ModuleName ["Data","Functor","Product"],ModuleName ["Data","Functor","Reverse"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\transformers-0.3.0.0\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\transformers-0.3.0.0\\ghc-7.6.2"], hsLibraries = ["HStransformers-0.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\transformers-0.3.0.0\\html\\transformers.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\transformers-0.3.0.0\\html"]}),(InstalledPackageId "unordered-containers-0.2.3.0-7412724f83059b677ac8bcdfbd29f082",InstalledPackageInfo {installedPackageId = InstalledPackageId "unordered-containers-0.2.3.0-7412724f83059b677ac8bcdfbd29f082", sourcePackageId = PackageIdentifier {pkgName = PackageName "unordered-containers", pkgVersion = Version {versionBranch = [0,2,3,0], versionTags = []}}, license = BSD3, copyright = "2010-2012 Johan Tibell\n2010 Edward Z. Yang", maintainer = "johan.tibell@gmail.com", author = "Johan Tibell", stability = "", homepage = "https://github.com/tibbe/unordered-containers", pkgUrl = "", synopsis = "Efficient hashing-based container types", description = "Efficient hashing-based container types.  The containers have been\noptimized for performance critical use, both in terms of large data\nquantities and high speed.\n\nThe declared cost of each operation is either worst-case or\namortized, but remains valid even if structures are shared.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","HashMap","Lazy"],ModuleName ["Data","HashMap","Strict"],ModuleName ["Data","HashSet"]], hiddenModules = [ModuleName ["Data","HashMap","Array"],ModuleName ["Data","HashMap","Base"],ModuleName ["Data","HashMap","PopCount"],ModuleName ["Data","HashMap","Unsafe"],ModuleName ["Data","HashMap","UnsafeShift"]], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\unordered-containers-0.2.3.0\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\unordered-containers-0.2.3.0\\ghc-7.6.2"], hsLibraries = ["HSunordered-containers-0.2.3.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9",InstalledPackageId "hashable-1.1.2.5-a23c13791ded741cac251bf087f78d05"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\unordered-containers-0.2.3.0\\html\\unordered-containers.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\unordered-containers-0.2.3.0\\html"]}),(InstalledPackageId "vector-0.10.0.1-98215d05dabc8e2b6bdc5d27e9f9f8d4",InstalledPackageInfo {installedPackageId = InstalledPackageId "vector-0.10.0.1-98215d05dabc8e2b6bdc5d27e9f9f8d4", sourcePackageId = PackageIdentifier {pkgName = PackageName "vector", pkgVersion = Version {versionBranch = [0,10,0,1], versionTags = []}}, license = BSD3, copyright = "(c) Roman Leshchinskiy 2008-2012", maintainer = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", author = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", stability = "", homepage = "http://code.haskell.org/vector", pkgUrl = "", synopsis = "Efficient Arrays", description = "\nAn efficient implementation of Int-indexed arrays (both mutable\nand immutable), with a powerful loop optimisation framework .\n\nIt is structured as follows:\n\n[\"Data.Vector\"] Boxed vectors of arbitrary types.\n\n[\"Data.Vector.Unboxed\"] Unboxed vectors with an adaptive\nrepresentation based on data type families.\n\n[\"Data.Vector.Storable\"] Unboxed vectors of 'Storable' types.\n\n[\"Data.Vector.Primitive\"] Unboxed vectors of primitive types as\ndefined by the @primitive@ package. \"Data.Vector.Unboxed\" is more\nflexible at no performance cost.\n\n[\"Data.Vector.Generic\"] Generic interface to the vector types.\n\nThere is also a (draft) tutorial on common uses of vector.\n\n* <http://haskell.org/haskellwiki/Numeric_Haskell:_A_Vector_Tutorial>\n\nPlease use the project trac to submit bug reports and feature\nrequests.\n\n* <http://trac.haskell.org/vector>\n\nChanges in version 0.10.0.1\n\n* Require @primitive@ to include workaround for a GHC array copying bug\n\nChanges in version 0.10\n\n* @NFData@ instances\n\n* More efficient block fills\n\n* Safe Haskell support removed\n", category = "Data, Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Vector","Internal","Check"],ModuleName ["Data","Vector","Fusion","Util"],ModuleName ["Data","Vector","Fusion","Stream","Size"],ModuleName ["Data","Vector","Fusion","Stream","Monadic"],ModuleName ["Data","Vector","Fusion","Stream"],ModuleName ["Data","Vector","Generic","Mutable"],ModuleName ["Data","Vector","Generic","Base"],ModuleName ["Data","Vector","Generic","New"],ModuleName ["Data","Vector","Generic"],ModuleName ["Data","Vector","Primitive","Mutable"],ModuleName ["Data","Vector","Primitive"],ModuleName ["Data","Vector","Storable","Internal"],ModuleName ["Data","Vector","Storable","Mutable"],ModuleName ["Data","Vector","Storable"],ModuleName ["Data","Vector","Unboxed","Base"],ModuleName ["Data","Vector","Unboxed","Mutable"],ModuleName ["Data","Vector","Unboxed"],ModuleName ["Data","Vector","Mutable"],ModuleName ["Data","Vector"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\vector-0.10.0.1\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\vector-0.10.0.1\\ghc-7.6.2"], hsLibraries = ["HSvector-0.10.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\vector-0.10.0.1\\ghc-7.6.2\\include"], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9",InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401",InstalledPackageId "primitive-0.5.0.1-4ecd316f3b2f8d062e9b576dcc9b7561"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\vector-0.10.0.1\\html\\vector.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\vector-0.10.0.1\\html"]}),(InstalledPackageId "vector-binary-instances-0.2.1.0-ad487a9f2b2a0da3dfef419875adf664",InstalledPackageInfo {installedPackageId = InstalledPackageId "vector-binary-instances-0.2.1.0-ad487a9f2b2a0da3dfef419875adf664", sourcePackageId = PackageIdentifier {pkgName = PackageName "vector-binary-instances", pkgVersion = Version {versionBranch = [0,2,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "dons00@gmail.com, bos@serpentine.com", author = "Don Stewart", stability = "Experimental", homepage = "https://github.com/bos/vector-binary-instances", pkgUrl = "", synopsis = "Instances of Data.Binary and Data.Serialize for vector", description = "Instances for Binary for the types defined in the vector package,\nmaking it easy to serialize vectors to and from disk. We use the\ngeneric interface to vectors, so all vector types are supported.\nSpecific instances are provided for unboxed, boxed and storable\nvectors.\n\nTo serialize a vector:\n\n> *Data.Vector.Binary> let v = Data.Vector.fromList [1..10]\n> *Data.Vector.Binary> v\n> fromList [1,2,3,4,5,6,7,8,9,10] :: Data.Vector.Vector\n> *Data.Vector.Binary> encode v\n> Chunk \"\\NUL\\NUL\\NUL\\NUL\\NUL...\\NUL\\NUL\\NUL\\t\\NUL\\NUL\\NUL\\NUL\\n\" Empty\n\nWhich you can in turn compress before writing to disk:\n\n> compress . encode $ v\n> Chunk \"\\US\\139\\b\\NUL\\NUL\\N...\\229\\240,\\254:\\NUL\\NUL\\NUL\" Empty", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","Vector","Binary"],ModuleName ["Data","Vector","Cereal"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\vector-binary-instances-0.2.1.0\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\vector-binary-instances-0.2.1.0\\ghc-7.6.2"], hsLibraries = ["HSvector-binary-instances-0.2.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "binary-0.7.0.1-0be0f7354c61af224ee397947ced9939",InstalledPackageId "cereal-0.3.5.2-db4fe091ba66c45c949f1c683961ac14",InstalledPackageId "vector-0.10.0.1-98215d05dabc8e2b6bdc5d27e9f9f8d4"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\vector-binary-instances-0.2.1.0\\html\\vector-binary-instances.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\vector-binary-instances-0.2.1.0\\html"]})]) (fromList [(PackageName "Win32",fromList [(Version {versionBranch = [2,3,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "Win32-2.3.0.0-f5882a1b36e1488320b4e9b543e160a3", sourcePackageId = PackageIdentifier {pkgName = PackageName "Win32", pkgVersion = Version {versionBranch = [2,3,0,0], versionTags = []}}, license = BSD3, copyright = "Alastair Reid, 1999-2003", maintainer = "Bryan O'Sullivan <bos@serpentine.com>", author = "Alastair Reid", stability = "", homepage = "https://github.com/haskell/win32", pkgUrl = "", synopsis = "A binding to part of the Win32 library", description = "A binding to part of the Win32 library.", category = "System, Graphics", exposed = True, exposedModules = [ModuleName ["Graphics","Win32","GDI"],ModuleName ["Graphics","Win32","GDI","Bitmap"],ModuleName ["Graphics","Win32","GDI","Brush"],ModuleName ["Graphics","Win32","GDI","Clip"],ModuleName ["Graphics","Win32","GDI","Font"],ModuleName ["Graphics","Win32","GDI","Graphics2D"],ModuleName ["Graphics","Win32","GDI","HDC"],ModuleName ["Graphics","Win32","GDI","Palette"],ModuleName ["Graphics","Win32","GDI","Path"],ModuleName ["Graphics","Win32","GDI","Pen"],ModuleName ["Graphics","Win32","GDI","Region"],ModuleName ["Graphics","Win32","GDI","Types"],ModuleName ["Graphics","Win32"],ModuleName ["Graphics","Win32","Control"],ModuleName ["Graphics","Win32","Dialogue"],ModuleName ["Graphics","Win32","Icon"],ModuleName ["Graphics","Win32","Key"],ModuleName ["Graphics","Win32","Menu"],ModuleName ["Graphics","Win32","Message"],ModuleName ["Graphics","Win32","Misc"],ModuleName ["Graphics","Win32","Resource"],ModuleName ["Graphics","Win32","Window"],ModuleName ["System","Win32"],ModuleName ["System","Win32","DebugApi"],ModuleName ["System","Win32","DLL"],ModuleName ["System","Win32","File"],ModuleName ["System","Win32","FileMapping"],ModuleName ["System","Win32","Info"],ModuleName ["System","Win32","Mem"],ModuleName ["System","Win32","NLS"],ModuleName ["System","Win32","Process"],ModuleName ["System","Win32","Registry"],ModuleName ["System","Win32","SimpleMAPI"],ModuleName ["System","Win32","Time"],ModuleName ["System","Win32","Console"],ModuleName ["System","Win32","Security"],ModuleName ["System","Win32","Types"],ModuleName ["System","Win32","Shell"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\Win32-2.3.0.0"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\Win32-2.3.0.0"], hsLibraries = ["HSWin32-2.3.0.0"], extraLibraries = ["user32","gdi32","winmm","advapi32","shell32","shfolder"], extraGHCiLibraries = [], includeDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\Win32-2.3.0.0\\include"], includes = ["HsWin32.h","HsGDI.h","WndProc.h"], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "bytestring-0.10.0.2-877e18a069185734787b0f7773347bcc"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/Win32-2.3.0.0\\Win32.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/Win32-2.3.0.0"]}])]),(PackageName "array",fromList [(Version {versionBranch = [0,4,0,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "array-0.4.0.1-bfd0744e4240f3fbe5e21e5a1f6d3c69", sourcePackageId = PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,4,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Mutable and immutable arrays", description = "This package defines the classes @IArray@ of immutable arrays and\n@MArray@ of arrays mutable within appropriate monads, as well as\nsome instances of these classes.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Array","Base"],ModuleName ["Data","Array","IArray"],ModuleName ["Data","Array","IO"],ModuleName ["Data","Array","IO","Safe"],ModuleName ["Data","Array","IO","Internals"],ModuleName ["Data","Array","MArray"],ModuleName ["Data","Array","MArray","Safe"],ModuleName ["Data","Array","ST"],ModuleName ["Data","Array","ST","Safe"],ModuleName ["Data","Array","Storable"],ModuleName ["Data","Array","Storable","Safe"],ModuleName ["Data","Array","Storable","Internals"],ModuleName ["Data","Array","Unboxed"],ModuleName ["Data","Array","Unsafe"],ModuleName ["Data","Array"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\array-0.4.0.1"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\array-0.4.0.1"], hsLibraries = ["HSarray-0.4.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/array-0.4.0.1\\array.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/array-0.4.0.1"]}])]),(PackageName "base",fromList [(Version {versionBranch = [4,6,0,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027", sourcePackageId = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,6,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Basic libraries", description = "This package contains the Prelude and its support libraries,\nand a large collection of useful libraries ranging from data\nstructures to parsing combinators and debugging utilities.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","IO","Encoding","CodePage","Table"],ModuleName ["GHC","Conc","Windows"],ModuleName ["GHC","Windows"],ModuleName ["Foreign","Concurrent"],ModuleName ["GHC","Arr"],ModuleName ["GHC","Base"],ModuleName ["GHC","Char"],ModuleName ["GHC","Conc"],ModuleName ["GHC","Conc","IO"],ModuleName ["GHC","Conc","Signal"],ModuleName ["GHC","Conc","Sync"],ModuleName ["GHC","ConsoleHandler"],ModuleName ["GHC","Constants"],ModuleName ["GHC","Desugar"],ModuleName ["GHC","Enum"],ModuleName ["GHC","Environment"],ModuleName ["GHC","Err"],ModuleName ["GHC","Exception"],ModuleName ["GHC","Exts"],ModuleName ["GHC","Fingerprint"],ModuleName ["GHC","Fingerprint","Type"],ModuleName ["GHC","Float"],ModuleName ["GHC","Float","ConversionUtils"],ModuleName ["GHC","Float","RealFracMethods"],ModuleName ["GHC","Foreign"],ModuleName ["GHC","ForeignPtr"],ModuleName ["GHC","Generics"],ModuleName ["GHC","GHCi"],ModuleName ["GHC","Handle"],ModuleName ["GHC","IO"],ModuleName ["GHC","IO","Buffer"],ModuleName ["GHC","IO","BufferedIO"],ModuleName ["GHC","IO","Device"],ModuleName ["GHC","IO","Encoding"],ModuleName ["GHC","IO","Encoding","CodePage"],ModuleName ["GHC","IO","Encoding","Failure"],ModuleName ["GHC","IO","Encoding","Iconv"],ModuleName ["GHC","IO","Encoding","Latin1"],ModuleName ["GHC","IO","Encoding","Types"],ModuleName ["GHC","IO","Encoding","UTF16"],ModuleName ["GHC","IO","Encoding","UTF32"],ModuleName ["GHC","IO","Encoding","UTF8"],ModuleName ["GHC","IO","Exception"],ModuleName ["GHC","IO","FD"],ModuleName ["GHC","IO","Handle"],ModuleName ["GHC","IO","Handle","FD"],ModuleName ["GHC","IO","Handle","Internals"],ModuleName ["GHC","IO","Handle","Text"],ModuleName ["GHC","IO","Handle","Types"],ModuleName ["GHC","IO","IOMode"],ModuleName ["GHC","IOArray"],ModuleName ["GHC","IOBase"],ModuleName ["GHC","IORef"],ModuleName ["GHC","IP"],ModuleName ["GHC","Int"],ModuleName ["GHC","List"],ModuleName ["GHC","MVar"],ModuleName ["GHC","Num"],ModuleName ["GHC","PArr"],ModuleName ["GHC","Pack"],ModuleName ["GHC","Ptr"],ModuleName ["GHC","Read"],ModuleName ["GHC","Real"],ModuleName ["GHC","ST"],ModuleName ["GHC","Stack"],ModuleName ["GHC","Stats"],ModuleName ["GHC","Show"],ModuleName ["GHC","Stable"],ModuleName ["GHC","Storable"],ModuleName ["GHC","STRef"],ModuleName ["GHC","TypeLits"],ModuleName ["GHC","TopHandler"],ModuleName ["GHC","Unicode"],ModuleName ["GHC","Weak"],ModuleName ["GHC","Word"],ModuleName ["System","Timeout"],ModuleName ["Control","Applicative"],ModuleName ["Control","Arrow"],ModuleName ["Control","Category"],ModuleName ["Control","Concurrent"],ModuleName ["Control","Concurrent","Chan"],ModuleName ["Control","Concurrent","MVar"],ModuleName ["Control","Concurrent","QSem"],ModuleName ["Control","Concurrent","QSemN"],ModuleName ["Control","Concurrent","SampleVar"],ModuleName ["Control","Exception"],ModuleName ["Control","Exception","Base"],ModuleName ["Control","Monad"],ModuleName ["Control","Monad","Fix"],ModuleName ["Control","Monad","Instances"],ModuleName ["Control","Monad","ST"],ModuleName ["Control","Monad","ST","Safe"],ModuleName ["Control","Monad","ST","Unsafe"],ModuleName ["Control","Monad","ST","Lazy"],ModuleName ["Control","Monad","ST","Lazy","Safe"],ModuleName ["Control","Monad","ST","Lazy","Unsafe"],ModuleName ["Control","Monad","ST","Strict"],ModuleName ["Control","Monad","Zip"],ModuleName ["Data","Bits"],ModuleName ["Data","Bool"],ModuleName ["Data","Char"],ModuleName ["Data","Complex"],ModuleName ["Data","Dynamic"],ModuleName ["Data","Either"],ModuleName ["Data","Eq"],ModuleName ["Data","Data"],ModuleName ["Data","Fixed"],ModuleName ["Data","Foldable"],ModuleName ["Data","Function"],ModuleName ["Data","Functor"],ModuleName ["Data","HashTable"],ModuleName ["Data","IORef"],ModuleName ["Data","Int"],ModuleName ["Data","Ix"],ModuleName ["Data","List"],ModuleName ["Data","Maybe"],ModuleName ["Data","Monoid"],ModuleName ["Data","Ord"],ModuleName ["Data","Ratio"],ModuleName ["Data","STRef"],ModuleName ["Data","STRef","Lazy"],ModuleName ["Data","STRef","Strict"],ModuleName ["Data","String"],ModuleName ["Data","Traversable"],ModuleName ["Data","Tuple"],ModuleName ["Data","Typeable"],ModuleName ["Data","Typeable","Internal"],ModuleName ["Data","Unique"],ModuleName ["Data","Version"],ModuleName ["Data","Word"],ModuleName ["Debug","Trace"],ModuleName ["Foreign"],ModuleName ["Foreign","C"],ModuleName ["Foreign","C","Error"],ModuleName ["Foreign","C","String"],ModuleName ["Foreign","C","Types"],ModuleName ["Foreign","ForeignPtr"],ModuleName ["Foreign","ForeignPtr","Safe"],ModuleName ["Foreign","ForeignPtr","Unsafe"],ModuleName ["Foreign","Marshal"],ModuleName ["Foreign","Marshal","Alloc"],ModuleName ["Foreign","Marshal","Array"],ModuleName ["Foreign","Marshal","Error"],ModuleName ["Foreign","Marshal","Pool"],ModuleName ["Foreign","Marshal","Safe"],ModuleName ["Foreign","Marshal","Utils"],ModuleName ["Foreign","Marshal","Unsafe"],ModuleName ["Foreign","Ptr"],ModuleName ["Foreign","Safe"],ModuleName ["Foreign","StablePtr"],ModuleName ["Foreign","Storable"],ModuleName ["Numeric"],ModuleName ["Prelude"],ModuleName ["System","Console","GetOpt"],ModuleName ["System","CPUTime"],ModuleName ["System","Environment"],ModuleName ["System","Exit"],ModuleName ["System","IO"],ModuleName ["System","IO","Error"],ModuleName ["System","IO","Unsafe"],ModuleName ["System","Info"],ModuleName ["System","Mem"],ModuleName ["System","Mem","StableName"],ModuleName ["System","Mem","Weak"],ModuleName ["System","Posix","Internals"],ModuleName ["System","Posix","Types"],ModuleName ["Text","ParserCombinators","ReadP"],ModuleName ["Text","ParserCombinators","ReadPrec"],ModuleName ["Text","Printf"],ModuleName ["Text","Read"],ModuleName ["Text","Read","Lex"],ModuleName ["Text","Show"],ModuleName ["Text","Show","Functions"],ModuleName ["Unsafe","Coerce"]], hiddenModules = [ModuleName ["Control","Monad","ST","Imp"],ModuleName ["Control","Monad","ST","Lazy","Imp"],ModuleName ["Foreign","ForeignPtr","Imp"],ModuleName ["System","Environment","ExecutablePath"]], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\base-4.6.0.1"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\base-4.6.0.1"], hsLibraries = ["HSbase-4.6.0.1"], extraLibraries = ["wsock32","user32","shell32"], extraGHCiLibraries = [], includeDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\base-4.6.0.1\\include"], includes = ["HsBase.h"], depends = [InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401",InstalledPackageId "integer-gmp-0.5.0.0-49dcb29a60dab14e03e6dd01e871a242",InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/base-4.6.0.1\\base.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/base-4.6.0.1"]}])]),(PackageName "binary",fromList [(Version {versionBranch = [0,7,0,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "binary-0.7.0.1-0be0f7354c61af224ee397947ced9939", sourcePackageId = PackageIdentifier {pkgName = PackageName "binary", pkgVersion = Version {versionBranch = [0,7,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Lennart Kolmodin, Don Stewart <dons00@gmail.com>", author = "Lennart Kolmodin <kolmodin@gmail.com>", stability = "provisional", homepage = "https://github.com/kolmodin/binary", pkgUrl = "", synopsis = "Binary serialisation for Haskell values using lazy ByteStrings", description = "Efficient, pure binary serialisation using lazy ByteStrings.\nHaskell values may be encoded to and from binary formats,\nwritten to disk as binary, or sent over the network.\nThe format used can be automatically generated, or\nyou can choose to implement a custom format if needed.\nSerialisation speeds of over 1 G\\/sec have been observed,\nso this library should be suitable for high performance\nscenarios.", category = "Data, Parsing", exposed = True, exposedModules = [ModuleName ["Data","Binary"],ModuleName ["Data","Binary","Put"],ModuleName ["Data","Binary","Get"],ModuleName ["Data","Binary","Get","Internal"],ModuleName ["Data","Binary","Builder"],ModuleName ["Data","Binary","Builder","Internal"]], hiddenModules = [ModuleName ["Data","Binary","Generic"],ModuleName ["Data","Binary","Builder","Base"],ModuleName ["Data","Binary","Class"]], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\binary-0.7.0.1\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\binary-0.7.0.1\\ghc-7.6.2"], hsLibraries = ["HSbinary-0.7.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.1-bfd0744e4240f3fbe5e21e5a1f6d3c69",InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "bytestring-0.10.0.2-877e18a069185734787b0f7773347bcc",InstalledPackageId "containers-0.5.0.0-d4a3d8ae809dae56ee705aaff19b803a"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\binary-0.7.0.1\\html\\binary.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\binary-0.7.0.1\\html"]}])]),(PackageName "bytestring",fromList [(Version {versionBranch = [0,10,0,2], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "bytestring-0.10.0.2-877e18a069185734787b0f7773347bcc", sourcePackageId = PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,10,0,2], versionTags = []}}, license = BSD3, copyright = "Copyright (c) Don Stewart          2005-2009,\n(c) Duncan Coutts        2006-2012,\n(c) David Roundy         2003-2005,\n(c) Jasper Van der Jeugt 2010,\n(c) Simon Meier          2010-2011.", maintainer = "Don Stewart <dons00@gmail.com>,\nDuncan Coutts <duncan@community.haskell.org>", author = "Don Stewart,\nDuncan Coutts", stability = "", homepage = "", pkgUrl = "", synopsis = "Fast, compact, strict and lazy byte strings with a list interface", description = "An efficient compact, immutable byte string type (both strict and lazy)\nsuitable for binary or 8-bit character data.\n\nThe 'ByteString' type represents sequences of bytes or 8-bit characters.\nIt is suitable for high performance use, both in terms of large data\nquantities, or high speed requirements. The 'ByteStrin'g functions follow\nthe same style as Haskell\\'s ordinary lists, so it is easy to convert code\nfrom using 'String' to 'ByteString'.\n\nTwo 'ByteString' variants are provided:\n\n* Strict 'ByteString's keep the string as a single large array. This\nmakes them convenient for passing data between C and Haskell.\n\n* Lazy 'ByteString's use a lazy list of strict chunks which makes it\nsuitable for I\\/O streaming tasks.\n\nThe @Char8@ modules provide a character-based view of the same\nunderlying 'ByteString' types. This makes it convenient to handle mixed\nbinary and 8-bit character content (which is common in many file formats\nand network protocols).\n\nThe 'Builder' module provides an efficient way to build up 'ByteString's\nin an ad-hoc way by repeated concatenation. This is ideal for fast\nserialisation or pretty printing.\n\n'ByteString's are not designed for Unicode. For Unicode strings you should\nuse the 'Text' type from the @text@ package.\n\nThese modules are intended to be imported qualified, to avoid name clashes\nwith \"Prelude\" functions, e.g.\n\n> import qualified Data.ByteString as BS", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","ByteString"],ModuleName ["Data","ByteString","Char8"],ModuleName ["Data","ByteString","Unsafe"],ModuleName ["Data","ByteString","Internal"],ModuleName ["Data","ByteString","Lazy"],ModuleName ["Data","ByteString","Lazy","Char8"],ModuleName ["Data","ByteString","Lazy","Internal"],ModuleName ["Data","ByteString","Lazy","Builder"],ModuleName ["Data","ByteString","Lazy","Builder","Extras"],ModuleName ["Data","ByteString","Lazy","Builder","ASCII"]], hiddenModules = [ModuleName ["Data","ByteString","Lazy","Builder","Internal"],ModuleName ["Data","ByteString","Lazy","Builder","BasicEncoding"],ModuleName ["Data","ByteString","Lazy","Builder","BasicEncoding","Extras"],ModuleName ["Data","ByteString","Lazy","Builder","BasicEncoding","Internal"],ModuleName ["Data","ByteString","Lazy","Builder","BasicEncoding","Binary"],ModuleName ["Data","ByteString","Lazy","Builder","BasicEncoding","ASCII"],ModuleName ["Data","ByteString","Lazy","Builder","BasicEncoding","Internal","Floating"],ModuleName ["Data","ByteString","Lazy","Builder","BasicEncoding","Internal","UncheckedShifts"],ModuleName ["Data","ByteString","Lazy","Builder","BasicEncoding","Internal","Base16"]], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\bytestring-0.10.0.2"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\bytestring-0.10.0.2"], hsLibraries = ["HSbytestring-0.10.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\bytestring-0.10.0.2\\include"], includes = ["fpstring.h"], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9",InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/bytestring-0.10.0.2\\bytestring.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/bytestring-0.10.0.2"]}])]),(PackageName "cereal",fromList [(Version {versionBranch = [0,3,5,2], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "cereal-0.3.5.2-db4fe091ba66c45c949f1c683961ac14", sourcePackageId = PackageIdentifier {pkgName = PackageName "cereal", pkgVersion = Version {versionBranch = [0,3,5,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Trevor Elliott <trevor@galois.com>", author = "Lennart Kolmodin <kolmodin@dtek.chalmers.se>,\nGalois Inc.,\nLemmih <lemmih@gmail.com>,\nBas van Dijk <v.dijk.bas@gmail.com>", stability = "provisional", homepage = "", pkgUrl = "", synopsis = "A binary serialization library", description = "A binary serialization library, similar to binary, that introduces an isolate\nprimitive for parser isolation, and replaces the asynchronous errors with a\nuser-handleable Either type.  Similar to binary in performance, but uses a\nstrict ByteString instead of a lazy ByteString, thus restricting it to\noperating on finite inputs.", category = "Data, Parsing", exposed = True, exposedModules = [ModuleName ["Data","Serialize"],ModuleName ["Data","Serialize","Put"],ModuleName ["Data","Serialize","Get"],ModuleName ["Data","Serialize","Builder"],ModuleName ["Data","Serialize","IEEE754"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\cereal-0.3.5.2\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\cereal-0.3.5.2\\ghc-7.6.2"], hsLibraries = ["HScereal-0.3.5.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.1-bfd0744e4240f3fbe5e21e5a1f6d3c69",InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "bytestring-0.10.0.2-877e18a069185734787b0f7773347bcc",InstalledPackageId "containers-0.5.0.0-d4a3d8ae809dae56ee705aaff19b803a",InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\cereal-0.3.5.2\\html\\cereal.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\cereal-0.3.5.2\\html"]}])]),(PackageName "containers",fromList [(Version {versionBranch = [0,5,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "containers-0.5.0.0-d4a3d8ae809dae56ee705aaff19b803a", sourcePackageId = PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,5,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "fox@ucw.cz", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Assorted concrete container types", description = "This package contains efficient general-purpose implementations\nof various basic immutable container types.  The declared cost of\neach operation is either worst-case or amortized, but remains\nvalid even if structures are shared.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Graph"],ModuleName ["Data","Sequence"],ModuleName ["Data","Tree"],ModuleName ["Data","IntMap"],ModuleName ["Data","IntMap","Lazy"],ModuleName ["Data","IntMap","Strict"],ModuleName ["Data","IntSet"],ModuleName ["Data","Map"],ModuleName ["Data","Map","Lazy"],ModuleName ["Data","Map","Strict"],ModuleName ["Data","Set"]], hiddenModules = [ModuleName ["Data","IntMap","Base"],ModuleName ["Data","IntSet","Base"],ModuleName ["Data","Map","Base"],ModuleName ["Data","Set","Base"],ModuleName ["Data","StrictPair"]], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\containers-0.5.0.0"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\containers-0.5.0.0"], hsLibraries = ["HScontainers-0.5.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.1-bfd0744e4240f3fbe5e21e5a1f6d3c69",InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9",InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/containers-0.5.0.0\\containers.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/containers-0.5.0.0"]}])]),(PackageName "dawg",fromList [(Version {versionBranch = [0,1,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "dawg-0.1.0.0-4a7df41d60724ebc7b5e8240f6bb1e23", sourcePackageId = PackageIdentifier {pkgName = PackageName "dawg", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "puttamalac@gmail.com", author = "Andras Kovacs", stability = "", homepage = "", pkgUrl = "", synopsis = "Generation and traversal of highly compressed directed acyclic word graphs.", description = "", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","DAWG"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\dawg-0.1.0.0\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\dawg-0.1.0.0\\ghc-7.6.2"], hsLibraries = ["HSdawg-0.1.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "binary-0.7.0.1-0be0f7354c61af224ee397947ced9939",InstalledPackageId "containers-0.5.0.0-d4a3d8ae809dae56ee705aaff19b803a",InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9",InstalledPackageId "mtl-2.1.2-36ff22533b21e2182d8d4647bfd2b3e7",InstalledPackageId "unordered-containers-0.2.3.0-7412724f83059b677ac8bcdfbd29f082",InstalledPackageId "vector-0.10.0.1-98215d05dabc8e2b6bdc5d27e9f9f8d4",InstalledPackageId "vector-binary-instances-0.2.1.0-ad487a9f2b2a0da3dfef419875adf664"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\dawg-0.1.0.0\\html\\dawg.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\dawg-0.1.0.0\\html"]}])]),(PackageName "deepseq",fromList [(Version {versionBranch = [1,3,0,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9", sourcePackageId = PackageIdentifier {pkgName = PackageName "deepseq", pkgVersion = Version {versionBranch = [1,3,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Deep evaluation of data structures", description = "This package provides methods for fully evaluating data structures\n(\\\"deep evaluation\\\"). Deep evaluation is often used for adding\nstrictness to a program, e.g. in order to force pending exceptions,\nremove space leaks, or force lazy I/O to happen. It is also useful\nin parallel programs, to ensure pending work does not migrate to the\nwrong thread.\n\nThe primary use of this package is via the 'deepseq' function, a\n\\\"deep\\\" version of 'seq'. It is implemented on top of an 'NFData'\ntypeclass (\\\"Normal Form Data\\\", data structures with no unevaluated\ncomponents) which defines strategies for fully evaluating different\ndata types.\n", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","DeepSeq"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\deepseq-1.3.0.1"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\deepseq-1.3.0.1"], hsLibraries = ["HSdeepseq-1.3.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.1-bfd0744e4240f3fbe5e21e5a1f6d3c69",InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/deepseq-1.3.0.1\\deepseq.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/deepseq-1.3.0.1"]}])]),(PackageName "directory",fromList [(Version {versionBranch = [1,2,0,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "directory-1.2.0.1-8b109efdd71642198f9e0c7f99c493c3", sourcePackageId = PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,2,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "library for directory handling", description = "This package provides a library for handling directories.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Directory"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\directory-1.2.0.1"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\directory-1.2.0.1"], hsLibraries = ["HSdirectory-1.2.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\directory-1.2.0.1\\include"], includes = ["HsDirectory.h"], depends = [InstalledPackageId "Win32-2.3.0.0-f5882a1b36e1488320b4e9b543e160a3",InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "filepath-1.3.0.1-7e61d69749ae8b9e386bbcf4aa30768f",InstalledPackageId "time-1.4.0.1-e528c0932d6b2b6a4f6b62f24dc61247"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/directory-1.2.0.1\\directory.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/directory-1.2.0.1"]}])]),(PackageName "filepath",fromList [(Version {versionBranch = [1,3,0,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "filepath-1.3.0.1-7e61d69749ae8b9e386bbcf4aa30768f", sourcePackageId = PackageIdentifier {pkgName = PackageName "filepath", pkgVersion = Version {versionBranch = [1,3,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "", author = "Neil Mitchell", stability = "", homepage = "http://www-users.cs.york.ac.uk/~ndm/filepath/", pkgUrl = "", synopsis = "Library for manipulating FilePaths in a cross platform way.", description = "", category = "System", exposed = True, exposedModules = [ModuleName ["System","FilePath"],ModuleName ["System","FilePath","Posix"],ModuleName ["System","FilePath","Windows"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\filepath-1.3.0.1"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\filepath-1.3.0.1"], hsLibraries = ["HSfilepath-1.3.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/filepath-1.3.0.1\\filepath.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/filepath-1.3.0.1"]}])]),(PackageName "ghc-prim",fromList [(Version {versionBranch = [0,3,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401", sourcePackageId = PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "GHC primitives", description = "GHC primitives.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Prim"],ModuleName ["GHC","Classes"],ModuleName ["GHC","CString"],ModuleName ["GHC","Debug"],ModuleName ["GHC","Magic"],ModuleName ["GHC","PrimopWrappers"],ModuleName ["GHC","IntWord64"],ModuleName ["GHC","Tuple"],ModuleName ["GHC","Types"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\ghc-prim-0.3.0.0"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\ghc-prim-0.3.0.0"], hsLibraries = ["HSghc-prim-0.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/ghc-prim-0.3.0.0\\ghc-prim.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/ghc-prim-0.3.0.0"]}])]),(PackageName "hashable",fromList [(Version {versionBranch = [1,1,2,5], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "hashable-1.1.2.5-a23c13791ded741cac251bf087f78d05", sourcePackageId = PackageIdentifier {pkgName = PackageName "hashable", pkgVersion = Version {versionBranch = [1,1,2,5], versionTags = []}}, license = BSD3, copyright = "", maintainer = "johan.tibell@gmail.com", author = "Milan Straka <fox@ucw.cz>\nJohan Tibell <johan.tibell@gmail.com>", stability = "Provisional", homepage = "http://github.com/tibbe/hashable", pkgUrl = "", synopsis = "A class for types that can be converted to a hash value", description = "This package defines a class, 'Hashable', for types that\ncan be converted to a hash value.  This class\nexists for the benefit of hashing-based data\nstructures.  The package provides instances for\nbasic types and a way to combine hash values.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","Hashable"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\hashable-1.1.2.5\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\hashable-1.1.2.5\\ghc-7.6.2"], hsLibraries = ["HShashable-1.1.2.5"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "bytestring-0.10.0.2-877e18a069185734787b0f7773347bcc",InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401",InstalledPackageId "integer-gmp-0.5.0.0-49dcb29a60dab14e03e6dd01e871a242",InstalledPackageId "text-0.11.2.3-6c12deca875260b104c0722af080d4f0"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\hashable-1.1.2.5\\html\\hashable.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\hashable-1.1.2.5\\html"]}])]),(PackageName "integer-gmp",fromList [(Version {versionBranch = [0,5,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "integer-gmp-0.5.0.0-49dcb29a60dab14e03e6dd01e871a242", sourcePackageId = PackageIdentifier {pkgName = PackageName "integer-gmp", pkgVersion = Version {versionBranch = [0,5,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Integer library based on GMP", description = "This package contains an Integer library based on GMP.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Integer"],ModuleName ["GHC","Integer","GMP","Internals"],ModuleName ["GHC","Integer","GMP","Prim"],ModuleName ["GHC","Integer","Logarithms"],ModuleName ["GHC","Integer","Logarithms","Internals"]], hiddenModules = [ModuleName ["GHC","Integer","Type"]], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\integer-gmp-0.5.0.0"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\integer-gmp-0.5.0.0"], hsLibraries = ["HSinteger-gmp-0.5.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/integer-gmp-0.5.0.0\\integer-gmp.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/integer-gmp-0.5.0.0"]}])]),(PackageName "mtl",fromList [(Version {versionBranch = [2,1,2], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "mtl-2.1.2-36ff22533b21e2182d8d4647bfd2b3e7", sourcePackageId = PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [2,1,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Edward Kmett <ekmett@gmail.com>", author = "Andy Gill", stability = "", homepage = "http://github.com/ekmett/mtl", pkgUrl = "", synopsis = "Monad classes, using functional dependencies", description = "Monad classes using functional dependencies, with instances\nfor various monad transformers, inspired by the paper\n/Functional Programming with Overloading and Higher-Order Polymorphism/,\nby Mark P Jones, in /Advanced School of Functional Programming/, 1995\n(<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Monad","Cont"],ModuleName ["Control","Monad","Cont","Class"],ModuleName ["Control","Monad","Error"],ModuleName ["Control","Monad","Error","Class"],ModuleName ["Control","Monad","Identity"],ModuleName ["Control","Monad","List"],ModuleName ["Control","Monad","RWS"],ModuleName ["Control","Monad","RWS","Class"],ModuleName ["Control","Monad","RWS","Lazy"],ModuleName ["Control","Monad","RWS","Strict"],ModuleName ["Control","Monad","Reader"],ModuleName ["Control","Monad","Reader","Class"],ModuleName ["Control","Monad","State"],ModuleName ["Control","Monad","State","Class"],ModuleName ["Control","Monad","State","Lazy"],ModuleName ["Control","Monad","State","Strict"],ModuleName ["Control","Monad","Trans"],ModuleName ["Control","Monad","Writer"],ModuleName ["Control","Monad","Writer","Class"],ModuleName ["Control","Monad","Writer","Lazy"],ModuleName ["Control","Monad","Writer","Strict"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\mtl-2.1.2\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\mtl-2.1.2\\ghc-7.6.2"], hsLibraries = ["HSmtl-2.1.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "transformers-0.3.0.0-404a369876d97d3814ef707114f1a62e"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\mtl-2.1.2\\html\\mtl.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\mtl-2.1.2\\html"]}])]),(PackageName "old-locale",fromList [(Version {versionBranch = [1,0,0,5], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "old-locale-1.0.0.5-1c7ec0d92a1ee33dca3d007b077944ff", sourcePackageId = PackageIdentifier {pkgName = PackageName "old-locale", pkgVersion = Version {versionBranch = [1,0,0,5], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "locale library", description = "This package provides the ability to adapt to\nlocale conventions such as date and time formats.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Locale"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\old-locale-1.0.0.5"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\old-locale-1.0.0.5"], hsLibraries = ["HSold-locale-1.0.0.5"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/old-locale-1.0.0.5\\old-locale.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/old-locale-1.0.0.5"]}])]),(PackageName "parallel",fromList [(Version {versionBranch = [3,2,0,3], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "parallel-3.2.0.3-4934b8e3b26e3669c45cff880fb393c6", sourcePackageId = PackageIdentifier {pkgName = PackageName "parallel", pkgVersion = Version {versionBranch = [3,2,0,3], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Parallel programming library", description = "This package provides a library for parallel programming.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Seq"],ModuleName ["Control","Parallel"],ModuleName ["Control","Parallel","Strategies"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\parallel-3.2.0.3\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\parallel-3.2.0.3\\ghc-7.6.2"], hsLibraries = ["HSparallel-3.2.0.3"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.1-bfd0744e4240f3fbe5e21e5a1f6d3c69",InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "containers-0.5.0.0-d4a3d8ae809dae56ee705aaff19b803a",InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\parallel-3.2.0.3\\html\\parallel.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\parallel-3.2.0.3\\html"]}])]),(PackageName "primitive",fromList [(Version {versionBranch = [0,5,0,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "primitive-0.5.0.1-4ecd316f3b2f8d062e9b576dcc9b7561", sourcePackageId = PackageIdentifier {pkgName = PackageName "primitive", pkgVersion = Version {versionBranch = [0,5,0,1], versionTags = []}}, license = BSD3, copyright = "(c) Roman Leshchinskiy 2009-2012", maintainer = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", author = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", stability = "", homepage = "http://code.haskell.org/primitive", pkgUrl = "", synopsis = "Primitive memory-related operations", description = "\nThis package provides various primitive memory-related operations.\n\nChanges in version 0.5.0.1\n\n* Disable array copying primitives for GHC 7.6.* and earlier\n\nChanges in version 0.5\n\n* New in \"Data.Primitive.MutVar\": @atomicModifyMutVar@\n\n* Efficient block fill operations: @setByteArray@, @setAddr@\n", category = "Data", exposed = True, exposedModules = [ModuleName ["Control","Monad","Primitive"],ModuleName ["Data","Primitive"],ModuleName ["Data","Primitive","MachDeps"],ModuleName ["Data","Primitive","Types"],ModuleName ["Data","Primitive","Array"],ModuleName ["Data","Primitive","ByteArray"],ModuleName ["Data","Primitive","Addr"],ModuleName ["Data","Primitive","MutVar"]], hiddenModules = [ModuleName ["Data","Primitive","Internal","Compat"],ModuleName ["Data","Primitive","Internal","Operations"]], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\primitive-0.5.0.1\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\primitive-0.5.0.1\\ghc-7.6.2"], hsLibraries = ["HSprimitive-0.5.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\primitive-0.5.0.1\\ghc-7.6.2\\include"], includes = ["primitive-memops.h"], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\primitive-0.5.0.1\\html\\primitive.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\primitive-0.5.0.1\\html"]}])]),(PackageName "rts",fromList [(Version {versionBranch = [1,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "builtin_rts", sourcePackageId = PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "glasgow-haskell-users@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "", description = "", category = "", exposed = True, exposedModules = [], hiddenModules = [], trusted = False, importDirs = [], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib"], hsLibraries = ["HSrts"], extraLibraries = ["m","wsock32","gdi32","winmm"], extraGHCiLibraries = [], includeDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/include"], includes = ["Stg.h"], depends = [], hugsOptions = [], ccOptions = [], ldOptions = ["-u","ghczmprim_GHCziTypes_Izh_static_info","-u","ghczmprim_GHCziTypes_Czh_static_info","-u","ghczmprim_GHCziTypes_Fzh_static_info","-u","ghczmprim_GHCziTypes_Dzh_static_info","-u","base_GHCziPtr_Ptr_static_info","-u","ghczmprim_GHCziTypes_Wzh_static_info","-u","base_GHCziInt_I8zh_static_info","-u","base_GHCziInt_I16zh_static_info","-u","base_GHCziInt_I32zh_static_info","-u","base_GHCziInt_I64zh_static_info","-u","base_GHCziWord_W8zh_static_info","-u","base_GHCziWord_W16zh_static_info","-u","base_GHCziWord_W32zh_static_info","-u","base_GHCziWord_W64zh_static_info","-u","base_GHCziStable_StablePtr_static_info","-u","ghczmprim_GHCziTypes_Izh_con_info","-u","ghczmprim_GHCziTypes_Czh_con_info","-u","ghczmprim_GHCziTypes_Fzh_con_info","-u","ghczmprim_GHCziTypes_Dzh_con_info","-u","base_GHCziPtr_Ptr_con_info","-u","base_GHCziPtr_FunPtr_con_info","-u","base_GHCziStable_StablePtr_con_info","-u","ghczmprim_GHCziTypes_False_closure","-u","ghczmprim_GHCziTypes_True_closure","-u","base_GHCziPack_unpackCString_closure","-u","base_GHCziIOziException_stackOverflow_closure","-u","base_GHCziIOziException_heapOverflow_closure","-u","base_ControlziExceptionziBase_nonTermination_closure","-u","base_GHCziIOziException_blockedIndefinitelyOnMVar_closure","-u","base_GHCziIOziException_blockedIndefinitelyOnSTM_closure","-u","base_ControlziExceptionziBase_nestedAtomically_closure","-u","base_GHCziWeak_runFinalizzerBatch_closure","-u","base_GHCziTopHandler_flushStdHandles_closure","-u","base_GHCziTopHandler_runIO_closure","-u","base_GHCziTopHandler_runNonIO_closure","-u","base_GHCziConcziIO_ensureIOManagerIsRunning_closure","-u","base_GHCziConcziSync_runSparks_closure","-u","base_GHCziConcziSignal_runHandlers_closure"], frameworkDirs = [], frameworks = [], haddockInterfaces = [], haddockHTMLs = []}])]),(PackageName "split",fromList [(Version {versionBranch = [0,2,2], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "split-0.2.2-3dea0531c354d1f77418c01696221e4c", sourcePackageId = PackageIdentifier {pkgName = PackageName "split", pkgVersion = Version {versionBranch = [0,2,2], versionTags = []}}, license = BSD3, copyright = "(c) Brent Yorgey, Louis Wasserman 2008-2012", maintainer = "byorgey@cis.upenn.edu", author = "Brent Yorgey", stability = "stable", homepage = "", pkgUrl = "", synopsis = "Combinator library for splitting lists.", description = "A collection of various methods for splitting\nlists into parts, akin to the \\\"split\\\" function\nfound in several mainstream languages. Here is\nits tale:\n\nOnce upon a time the standard \"Data.List\" module\nheld no function for splitting a list into parts\naccording to a delimiter.  Many a brave\nlambda-knight strove to add such a function, but\ntheir striving was in vain, for Lo, the Supreme\nCouncil fell to bickering amongst themselves what\nwas to be the essential nature of the One True\nFunction which could cleave a list in twain (or\nthrain, or any required number of parts).\n\nAnd thus came to pass the split package,\ncomprising divers functions for splitting a list\nasunder, each according to its nature.  And the\nSupreme Council had no longer any grounds for\nargument, for the favored method of each was\ncontained therein.\n\nTo get started, see the \"Data.List.Split\" module.", category = "List", exposed = True, exposedModules = [ModuleName ["Data","List","Split"],ModuleName ["Data","List","Split","Internals"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\split-0.2.2\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\split-0.2.2\\ghc-7.6.2"], hsLibraries = ["HSsplit-0.2.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\split-0.2.2\\html\\split.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\split-0.2.2\\html"]}])]),(PackageName "text",fromList [(Version {versionBranch = [0,11,2,3], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "text-0.11.2.3-6c12deca875260b104c0722af080d4f0", sourcePackageId = PackageIdentifier {pkgName = PackageName "text", pkgVersion = Version {versionBranch = [0,11,2,3], versionTags = []}}, license = BSD3, copyright = "2009-2011 Bryan O'Sullivan, 2008-2009 Tom Harper", maintainer = "Bryan O'Sullivan <bos@serpentine.com>", author = "Bryan O'Sullivan <bos@serpentine.com>", stability = "", homepage = "https://github.com/bos/text", pkgUrl = "", synopsis = "An efficient packed Unicode text type.", description = "\nAn efficient packed, immutable Unicode text type (both strict and\nlazy), with a powerful loop fusion optimization framework.\n\nThe 'Text' type represents Unicode character strings, in a time and\nspace-efficient manner. This package provides text processing\ncapabilities that are optimized for performance critical use, both\nin terms of large data quantities and high speed.\n\nThe 'Text' type provides character-encoding, type-safe case\nconversion via whole-string case conversion functions. It also\nprovides a range of functions for converting 'Text' values to and from\n'ByteStrings', using several standard encodings.\n\nEfficient locale-sensitive support for text IO is also supported.\n\nThese modules are intended to be imported qualified, to avoid name\nclashes with Prelude functions, e.g.\n\n> import qualified Data.Text as T\n\nTo use an extended and very rich family of functions for working\nwith Unicode text (including normalization, regular expressions,\nnon-standard encodings, text breaking, and locales), see\nthe @text-icu@ package:\n<http://hackage.haskell.org/package/text-icu>\n\n&#8212;&#8212; RELEASE NOTES &#8212;&#8212;\n\nChanges in 0.11.2.0:\n\n* String literals are now converted directly from the format in\nwhich GHC stores them into 'Text', without an intermediate\ntransformation through 'String', and without inlining of\nconversion code at each site where a string literal is declared.\n", category = "Data, Text", exposed = True, exposedModules = [ModuleName ["Data","Text"],ModuleName ["Data","Text","Array"],ModuleName ["Data","Text","Encoding"],ModuleName ["Data","Text","Encoding","Error"],ModuleName ["Data","Text","Foreign"],ModuleName ["Data","Text","IO"],ModuleName ["Data","Text","Internal"],ModuleName ["Data","Text","Lazy"],ModuleName ["Data","Text","Lazy","Builder"],ModuleName ["Data","Text","Lazy","Builder","Int"],ModuleName ["Data","Text","Lazy","Builder","RealFloat"],ModuleName ["Data","Text","Lazy","Encoding"],ModuleName ["Data","Text","Lazy","IO"],ModuleName ["Data","Text","Lazy","Internal"],ModuleName ["Data","Text","Lazy","Read"],ModuleName ["Data","Text","Read"]], hiddenModules = [ModuleName ["Data","Text","Encoding","Fusion"],ModuleName ["Data","Text","Encoding","Fusion","Common"],ModuleName ["Data","Text","Encoding","Utf16"],ModuleName ["Data","Text","Encoding","Utf32"],ModuleName ["Data","Text","Encoding","Utf8"],ModuleName ["Data","Text","Fusion"],ModuleName ["Data","Text","Fusion","CaseMapping"],ModuleName ["Data","Text","Fusion","Common"],ModuleName ["Data","Text","Fusion","Internal"],ModuleName ["Data","Text","Fusion","Size"],ModuleName ["Data","Text","IO","Internal"],ModuleName ["Data","Text","Lazy","Builder","Functions"],ModuleName ["Data","Text","Lazy","Builder","RealFloat","Functions"],ModuleName ["Data","Text","Lazy","Encoding","Fusion"],ModuleName ["Data","Text","Lazy","Fusion"],ModuleName ["Data","Text","Lazy","Search"],ModuleName ["Data","Text","Private"],ModuleName ["Data","Text","Search"],ModuleName ["Data","Text","Unsafe"],ModuleName ["Data","Text","Unsafe","Base"],ModuleName ["Data","Text","UnsafeChar"],ModuleName ["Data","Text","UnsafeShift"],ModuleName ["Data","Text","Util"]], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\text-0.11.2.3\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\text-0.11.2.3\\ghc-7.6.2"], hsLibraries = ["HStext-0.11.2.3"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.4.0.1-bfd0744e4240f3fbe5e21e5a1f6d3c69",InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "bytestring-0.10.0.2-877e18a069185734787b0f7773347bcc",InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9",InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401",InstalledPackageId "integer-gmp-0.5.0.0-49dcb29a60dab14e03e6dd01e871a242"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\text-0.11.2.3\\html\\text.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\text-0.11.2.3\\html"]}])]),(PackageName "time",fromList [(Version {versionBranch = [1,4,0,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "time-1.4.0.1-e528c0932d6b2b6a4f6b62f24dc61247", sourcePackageId = PackageIdentifier {pkgName = PackageName "time", pkgVersion = Version {versionBranch = [1,4,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "<ashley@semantic.org>", author = "Ashley Yakeley", stability = "stable", homepage = "http://semantic.org/TimeLib/", pkgUrl = "", synopsis = "A time library", description = "A time library", category = "System", exposed = True, exposedModules = [ModuleName ["Data","Time","Calendar"],ModuleName ["Data","Time","Calendar","MonthDay"],ModuleName ["Data","Time","Calendar","OrdinalDate"],ModuleName ["Data","Time","Calendar","WeekDate"],ModuleName ["Data","Time","Calendar","Julian"],ModuleName ["Data","Time","Calendar","Easter"],ModuleName ["Data","Time","Clock"],ModuleName ["Data","Time","Clock","POSIX"],ModuleName ["Data","Time","Clock","TAI"],ModuleName ["Data","Time","LocalTime"],ModuleName ["Data","Time","Format"],ModuleName ["Data","Time"]], hiddenModules = [ModuleName ["Data","Time","Calendar","Private"],ModuleName ["Data","Time","Calendar","Days"],ModuleName ["Data","Time","Calendar","Gregorian"],ModuleName ["Data","Time","Calendar","JulianYearDay"],ModuleName ["Data","Time","Clock","Scale"],ModuleName ["Data","Time","Clock","UTC"],ModuleName ["Data","Time","Clock","CTimeval"],ModuleName ["Data","Time","Clock","UTCDiff"],ModuleName ["Data","Time","LocalTime","TimeZone"],ModuleName ["Data","Time","LocalTime","TimeOfDay"],ModuleName ["Data","Time","LocalTime","LocalTime"],ModuleName ["Data","Time","Format","Parse"]], trusted = False, importDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\time-1.4.0.1"], libraryDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\time-1.4.0.1"], hsLibraries = ["HStime-1.4.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib\\time-1.4.0.1\\include"], includes = [], depends = [InstalledPackageId "Win32-2.3.0.0-f5882a1b36e1488320b4e9b543e160a3",InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9",InstalledPackageId "old-locale-1.0.0.5-1c7ec0d92a1ee33dca3d007b077944ff"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/time-1.4.0.1\\time.haddock"], haddockHTMLs = ["C:\\Kutta\\App\\ghc-7.6.2\\lib/../doc/html/libraries/time-1.4.0.1"]}])]),(PackageName "transformers",fromList [(Version {versionBranch = [0,3,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "transformers-0.3.0.0-404a369876d97d3814ef707114f1a62e", sourcePackageId = PackageIdentifier {pkgName = PackageName "transformers", pkgVersion = Version {versionBranch = [0,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Ross Paterson <ross@soi.city.ac.uk>", author = "Andy Gill, Ross Paterson", stability = "", homepage = "", pkgUrl = "", synopsis = "Concrete functor and monad transformers", description = "A portable library of functor and monad transformers, inspired by\nthe paper \\\"Functional Programming with Overloading and Higher-Order\nPolymorphism\\\", by Mark P Jones,\nin /Advanced School of Functional Programming/, 1995\n(<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).\n\nThis package contains:\n\n* the monad transformer class (in \"Control.Monad.Trans.Class\")\n\n* concrete functor and monad transformers, each with associated\noperations and functions to lift operations associated with other\ntransformers.\n\nIt can be used on its own in portable Haskell code, or with the monad\nclasses in the @mtl@ or @monads-tf@ packages, which automatically\nlift operations introduced by monad transformers through other\ntransformers.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Applicative","Backwards"],ModuleName ["Control","Applicative","Lift"],ModuleName ["Control","Monad","IO","Class"],ModuleName ["Control","Monad","Trans","Class"],ModuleName ["Control","Monad","Trans","Cont"],ModuleName ["Control","Monad","Trans","Error"],ModuleName ["Control","Monad","Trans","Identity"],ModuleName ["Control","Monad","Trans","List"],ModuleName ["Control","Monad","Trans","Maybe"],ModuleName ["Control","Monad","Trans","Reader"],ModuleName ["Control","Monad","Trans","RWS"],ModuleName ["Control","Monad","Trans","RWS","Lazy"],ModuleName ["Control","Monad","Trans","RWS","Strict"],ModuleName ["Control","Monad","Trans","State"],ModuleName ["Control","Monad","Trans","State","Lazy"],ModuleName ["Control","Monad","Trans","State","Strict"],ModuleName ["Control","Monad","Trans","Writer"],ModuleName ["Control","Monad","Trans","Writer","Lazy"],ModuleName ["Control","Monad","Trans","Writer","Strict"],ModuleName ["Data","Functor","Compose"],ModuleName ["Data","Functor","Constant"],ModuleName ["Data","Functor","Identity"],ModuleName ["Data","Functor","Product"],ModuleName ["Data","Functor","Reverse"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\transformers-0.3.0.0\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\transformers-0.3.0.0\\ghc-7.6.2"], hsLibraries = ["HStransformers-0.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\transformers-0.3.0.0\\html\\transformers.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\transformers-0.3.0.0\\html"]}])]),(PackageName "unordered-containers",fromList [(Version {versionBranch = [0,2,3,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "unordered-containers-0.2.3.0-7412724f83059b677ac8bcdfbd29f082", sourcePackageId = PackageIdentifier {pkgName = PackageName "unordered-containers", pkgVersion = Version {versionBranch = [0,2,3,0], versionTags = []}}, license = BSD3, copyright = "2010-2012 Johan Tibell\n2010 Edward Z. Yang", maintainer = "johan.tibell@gmail.com", author = "Johan Tibell", stability = "", homepage = "https://github.com/tibbe/unordered-containers", pkgUrl = "", synopsis = "Efficient hashing-based container types", description = "Efficient hashing-based container types.  The containers have been\noptimized for performance critical use, both in terms of large data\nquantities and high speed.\n\nThe declared cost of each operation is either worst-case or\namortized, but remains valid even if structures are shared.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","HashMap","Lazy"],ModuleName ["Data","HashMap","Strict"],ModuleName ["Data","HashSet"]], hiddenModules = [ModuleName ["Data","HashMap","Array"],ModuleName ["Data","HashMap","Base"],ModuleName ["Data","HashMap","PopCount"],ModuleName ["Data","HashMap","Unsafe"],ModuleName ["Data","HashMap","UnsafeShift"]], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\unordered-containers-0.2.3.0\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\unordered-containers-0.2.3.0\\ghc-7.6.2"], hsLibraries = ["HSunordered-containers-0.2.3.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9",InstalledPackageId "hashable-1.1.2.5-a23c13791ded741cac251bf087f78d05"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\unordered-containers-0.2.3.0\\html\\unordered-containers.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\unordered-containers-0.2.3.0\\html"]}])]),(PackageName "vector",fromList [(Version {versionBranch = [0,10,0,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "vector-0.10.0.1-98215d05dabc8e2b6bdc5d27e9f9f8d4", sourcePackageId = PackageIdentifier {pkgName = PackageName "vector", pkgVersion = Version {versionBranch = [0,10,0,1], versionTags = []}}, license = BSD3, copyright = "(c) Roman Leshchinskiy 2008-2012", maintainer = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", author = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", stability = "", homepage = "http://code.haskell.org/vector", pkgUrl = "", synopsis = "Efficient Arrays", description = "\nAn efficient implementation of Int-indexed arrays (both mutable\nand immutable), with a powerful loop optimisation framework .\n\nIt is structured as follows:\n\n[\"Data.Vector\"] Boxed vectors of arbitrary types.\n\n[\"Data.Vector.Unboxed\"] Unboxed vectors with an adaptive\nrepresentation based on data type families.\n\n[\"Data.Vector.Storable\"] Unboxed vectors of 'Storable' types.\n\n[\"Data.Vector.Primitive\"] Unboxed vectors of primitive types as\ndefined by the @primitive@ package. \"Data.Vector.Unboxed\" is more\nflexible at no performance cost.\n\n[\"Data.Vector.Generic\"] Generic interface to the vector types.\n\nThere is also a (draft) tutorial on common uses of vector.\n\n* <http://haskell.org/haskellwiki/Numeric_Haskell:_A_Vector_Tutorial>\n\nPlease use the project trac to submit bug reports and feature\nrequests.\n\n* <http://trac.haskell.org/vector>\n\nChanges in version 0.10.0.1\n\n* Require @primitive@ to include workaround for a GHC array copying bug\n\nChanges in version 0.10\n\n* @NFData@ instances\n\n* More efficient block fills\n\n* Safe Haskell support removed\n", category = "Data, Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Vector","Internal","Check"],ModuleName ["Data","Vector","Fusion","Util"],ModuleName ["Data","Vector","Fusion","Stream","Size"],ModuleName ["Data","Vector","Fusion","Stream","Monadic"],ModuleName ["Data","Vector","Fusion","Stream"],ModuleName ["Data","Vector","Generic","Mutable"],ModuleName ["Data","Vector","Generic","Base"],ModuleName ["Data","Vector","Generic","New"],ModuleName ["Data","Vector","Generic"],ModuleName ["Data","Vector","Primitive","Mutable"],ModuleName ["Data","Vector","Primitive"],ModuleName ["Data","Vector","Storable","Internal"],ModuleName ["Data","Vector","Storable","Mutable"],ModuleName ["Data","Vector","Storable"],ModuleName ["Data","Vector","Unboxed","Base"],ModuleName ["Data","Vector","Unboxed","Mutable"],ModuleName ["Data","Vector","Unboxed"],ModuleName ["Data","Vector","Mutable"],ModuleName ["Data","Vector"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\vector-0.10.0.1\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\vector-0.10.0.1\\ghc-7.6.2"], hsLibraries = ["HSvector-0.10.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\vector-0.10.0.1\\ghc-7.6.2\\include"], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "deepseq-1.3.0.1-5a51be95ce07ca5b213668b9e29a22f9",InstalledPackageId "ghc-prim-0.3.0.0-c19aaafe5538fb39fa00565321458401",InstalledPackageId "primitive-0.5.0.1-4ecd316f3b2f8d062e9b576dcc9b7561"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\vector-0.10.0.1\\html\\vector.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\vector-0.10.0.1\\html"]}])]),(PackageName "vector-binary-instances",fromList [(Version {versionBranch = [0,2,1,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "vector-binary-instances-0.2.1.0-ad487a9f2b2a0da3dfef419875adf664", sourcePackageId = PackageIdentifier {pkgName = PackageName "vector-binary-instances", pkgVersion = Version {versionBranch = [0,2,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "dons00@gmail.com, bos@serpentine.com", author = "Don Stewart", stability = "Experimental", homepage = "https://github.com/bos/vector-binary-instances", pkgUrl = "", synopsis = "Instances of Data.Binary and Data.Serialize for vector", description = "Instances for Binary for the types defined in the vector package,\nmaking it easy to serialize vectors to and from disk. We use the\ngeneric interface to vectors, so all vector types are supported.\nSpecific instances are provided for unboxed, boxed and storable\nvectors.\n\nTo serialize a vector:\n\n> *Data.Vector.Binary> let v = Data.Vector.fromList [1..10]\n> *Data.Vector.Binary> v\n> fromList [1,2,3,4,5,6,7,8,9,10] :: Data.Vector.Vector\n> *Data.Vector.Binary> encode v\n> Chunk \"\\NUL\\NUL\\NUL\\NUL\\NUL...\\NUL\\NUL\\NUL\\t\\NUL\\NUL\\NUL\\NUL\\n\" Empty\n\nWhich you can in turn compress before writing to disk:\n\n> compress . encode $ v\n> Chunk \"\\US\\139\\b\\NUL\\NUL\\N...\\229\\240,\\254:\\NUL\\NUL\\NUL\" Empty", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","Vector","Binary"],ModuleName ["Data","Vector","Cereal"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\vector-binary-instances-0.2.1.0\\ghc-7.6.2"], libraryDirs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\vector-binary-instances-0.2.1.0\\ghc-7.6.2"], hsLibraries = ["HSvector-binary-instances-0.2.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.6.0.1-c6e25dc93fcc3e77ba09d7cd041c1027",InstalledPackageId "binary-0.7.0.1-0be0f7354c61af224ee397947ced9939",InstalledPackageId "cereal-0.3.5.2-db4fe091ba66c45c949f1c683961ac14",InstalledPackageId "vector-0.10.0.1-98215d05dabc8e2b6bdc5d27e9f9f8d4"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\vector-binary-instances-0.2.1.0\\html\\vector-binary-instances.haddock"], haddockHTMLs = ["C:\\Users\\Kutta\\AppData\\Roaming\\cabal\\doc\\vector-binary-instances-0.2.1.0\\html"]}])])]), pkgDescrFile = Just ".\\scrabble-bot.cabal", localPkgDescr = PackageDescription {package = PackageIdentifier {pkgName = PackageName "scrabble-bot", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}, license = BSD3, licenseFile = "LICENSE", copyright = "", maintainer = "Andr\225s Kov\225cs <puttamalac@gmail.com>", author = "Andr\225s Kov\225cs", stability = "experimental", testedWith = [], homepage = "", pkgUrl = "", bugReports = "", sourceRepos = [], synopsis = "Scrabble play generation.", description = "", category = "Game", customFieldsPD = [], buildDepends = [Dependency (PackageName "array") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [0,4], versionTags = []})) (ThisVersion (Version {versionBranch = [0,4,0,1], versionTags = []}))),Dependency (PackageName "base") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [4,6], versionTags = []})) (ThisVersion (Version {versionBranch = [4,6,0,1], versionTags = []}))),Dependency (PackageName "binary") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [0,7], versionTags = []})) (ThisVersion (Version {versionBranch = [0,7,0,1], versionTags = []}))),Dependency (PackageName "containers") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [0,5], versionTags = []})) (ThisVersion (Version {versionBranch = [0,5,0,0], versionTags = []}))),Dependency (PackageName "dawg") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,1,0,0], versionTags = []})) (LaterVersion (Version {versionBranch = [0,1,0,0], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,1,0,0], versionTags = []}))),Dependency (PackageName "deepseq") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [1,3], versionTags = []})) (ThisVersion (Version {versionBranch = [1,3,0,1], versionTags = []}))),Dependency (PackageName "directory") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [1,2], versionTags = []})) (ThisVersion (Version {versionBranch = [1,2,0,1], versionTags = []}))),Dependency (PackageName "mtl") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [2,1], versionTags = []})) (ThisVersion (Version {versionBranch = [2,1,2], versionTags = []}))),Dependency (PackageName "parallel") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [3,2], versionTags = []})) (ThisVersion (Version {versionBranch = [3,2,0,3], versionTags = []}))),Dependency (PackageName "split") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [0,2], versionTags = []})) (ThisVersion (Version {versionBranch = [0,2,2], versionTags = []})))], specVersionRaw = Right (UnionVersionRanges (ThisVersion (Version {versionBranch = [1,8], versionTags = []})) (LaterVersion (Version {versionBranch = [1,8], versionTags = []}))), buildType = Just Simple, library = Nothing, executables = [Executable {exeName = "scrabble-bot", modulePath = "PlayGen.hs", buildInfo = BuildInfo {buildable = True, buildTools = [], cppOptions = [], ccOptions = [], ldOptions = [], pkgconfigDepends = [], frameworks = [], cSources = [], hsSourceDirs = ["."], otherModules = [ModuleName ["GameData"]], defaultLanguage = Nothing, otherLanguages = [], defaultExtensions = [], otherExtensions = [], oldExtensions = [], extraLibs = [], extraLibDirs = [], includeDirs = [], includes = [], installIncludes = [], options = [(GHC,["-O2","-rtsopts","-threaded","-with-rtsopts=-N"])], ghcProfOptions = [], ghcSharedOptions = [], customFieldsBI = [], targetBuildDepends = [Dependency (PackageName "array") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [0,4], versionTags = []})) (ThisVersion (Version {versionBranch = [0,4,0,1], versionTags = []}))),Dependency (PackageName "base") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [4,6], versionTags = []})) (ThisVersion (Version {versionBranch = [4,6,0,1], versionTags = []}))),Dependency (PackageName "binary") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [0,7], versionTags = []})) (ThisVersion (Version {versionBranch = [0,7,0,1], versionTags = []}))),Dependency (PackageName "containers") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [0,5], versionTags = []})) (ThisVersion (Version {versionBranch = [0,5,0,0], versionTags = []}))),Dependency (PackageName "dawg") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,1,0,0], versionTags = []})) (LaterVersion (Version {versionBranch = [0,1,0,0], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,1,0,0], versionTags = []}))),Dependency (PackageName "deepseq") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [1,3], versionTags = []})) (ThisVersion (Version {versionBranch = [1,3,0,1], versionTags = []}))),Dependency (PackageName "directory") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [1,2], versionTags = []})) (ThisVersion (Version {versionBranch = [1,2,0,1], versionTags = []}))),Dependency (PackageName "mtl") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [2,1], versionTags = []})) (ThisVersion (Version {versionBranch = [2,1,2], versionTags = []}))),Dependency (PackageName "parallel") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [3,2], versionTags = []})) (ThisVersion (Version {versionBranch = [3,2,0,3], versionTags = []}))),Dependency (PackageName "split") (IntersectVersionRanges (WildcardVersion (Version {versionBranch = [0,2], versionTags = []})) (ThisVersion (Version {versionBranch = [0,2,2], versionTags = []})))]}}], testSuites = [], benchmarks = [], dataFiles = ["dictionaries/*.txt","twl06.dawg"], dataDir = "", extraSrcFiles = [], extraTmpFiles = []}, withPrograms = [("ar",ConfiguredProgram {programId = "ar", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "c:\\Kutta\\App\\ghc-7.6.2\\mingw\\bin\\ar.exe"}}),("gcc",ConfiguredProgram {programId = "gcc", programVersion = Just (Version {versionBranch = [4,6,3], versionTags = []}), programDefaultArgs = ["-Wl,--hash-size=31","-Wl,--reduce-memory-overheads"], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "c:\\Kutta\\App\\ghc-7.6.2\\mingw\\bin\\gcc.exe"}}),("ghc",ConfiguredProgram {programId = "ghc", programVersion = Just (Version {versionBranch = [7,6,2], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "c:\\Kutta\\App\\ghc-7.6.2\\bin\\ghc.exe"}}),("ghc-pkg",ConfiguredProgram {programId = "ghc-pkg", programVersion = Just (Version {versionBranch = [7,6,2], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "c:\\Kutta\\App\\ghc-7.6.2\\bin\\ghc-pkg.exe"}}),("haddock",ConfiguredProgram {programId = "haddock", programVersion = Just (Version {versionBranch = [2,13,2], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "c:\\Kutta\\App\\ghc-7.6.2\\bin\\haddock.exe"}}),("hpc",ConfiguredProgram {programId = "hpc", programVersion = Just (Version {versionBranch = [0,6], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "c:\\Kutta\\App\\ghc-7.6.2\\bin\\hpc.exe"}}),("hsc2hs",ConfiguredProgram {programId = "hsc2hs", programVersion = Just (Version {versionBranch = [0,67], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "c:\\Kutta\\App\\ghc-7.6.2\\bin\\hsc2hs.exe"}}),("hscolour",ConfiguredProgram {programId = "hscolour", programVersion = Just (Version {versionBranch = [1,20], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "c:\\Users\\Kutta\\AppData\\Roaming\\cabal\\bin\\HsColour.exe"}}),("ld",ConfiguredProgram {programId = "ld", programVersion = Nothing, programDefaultArgs = ["-x","--hash-size=31","--reduce-memory-overheads"], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "c:\\Kutta\\App\\ghc-7.6.2\\mingw\\bin\\ld.exe"}}),("ranlib",ConfiguredProgram {programId = "ranlib", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\MinGW\\bin\\ranlib.exe"}}),("strip",ConfiguredProgram {programId = "strip", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "c:\\Kutta\\App\\ghc-7.6.2\\mingw\\bin\\strip.exe"}}),("tar",ConfiguredProgram {programId = "tar", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programLocation = FoundOnSystem {locationPath = "c:\\MinGW\\msys\\1.0\\bin\\tar.exe"}})], withPackageDB = [GlobalPackageDB,UserPackageDB], withVanillaLib = True, withProfLib = False, withSharedLib = False, withDynExe = False, withProfExe = False, withOptimization = NormalOptimisation, withGHCiLib = True, splitObjs = False, stripExes = True, progPrefix = "", progSuffix = ""}